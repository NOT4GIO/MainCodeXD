--[[

██████╗░██████╗░███████╗░█████╗░██████╗░██╗░░░██╗  ░█████╗░███████╗███████╗██╗░█████╗░██╗░█████╗░██╗░░░░░
██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔══██╗╚██╗░██╔╝  ██╔══██╗██╔════╝██╔════╝██║██╔══██╗██║██╔══██╗██║░░░░░
██║░░██║██████╔╝█████╗░░███████║██████╔╝░╚████╔╝░  ██║░░██║█████╗░░█████╗░░██║██║░░╚═╝██║███████║██║░░░░░
██║░░██║██╔══██╗██╔══╝░░██╔══██║██╔══██╗░░╚██╔╝░░  ██║░░██║██╔══╝░░██╔══╝░░██║██║░░██╗██║██╔══██║██║░░░░░
██████╔╝██║░░██║███████╗██║░░██║██║░░██║░░░██║░░░  ╚█████╔╝██║░░░░░██║░░░░░██║╚█████╔╝██║██║░░██║███████╗
╚═════╝░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░  ░╚════╝░╚═╝░░░░░╚═╝░░░░░╚═╝░╚════╝░╚═╝╚═╝░░╚═╝╚══════╝

\_This Lua Script was made by (Alpha 0.1.8) _/
█░░ █░█ ▄▀█ █▀█ █▄▄ █▀▀ █░█ █▀ █▀▀ ▄▀█ ▀█▀ █▀█ █▀█
█▄▄ █▄█ █▀█ █▄█ █▄█ █▀░ █▄█ ▄█ █▄▄ █▀█ ░█░ █▄█ █▀▄

Programed by 4kgw#4444 
https://discord.gg/WeppkaK62E
v1.8.9

          This script has been licensed using Dreary Official
      Unauthorized distribution of this script is forbidden.
Any attempts at tampering, reverse engineering or modifying this script
            internal logic will result in a global ban.
            
            STOP TRYING TO STEAL THE SOURCE CODE NIGGER BOY
            IF YOU WANNA LEARN SHIT DM ME BRO 💀💀💀☠️
      
           
 --]]


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (3==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v37)if (v2(v37,2)==79) then local v71=0;while true do if (v71==0) then v26=v1(v4(v37,1,1));return "";end end else local v72=v3(v1(v37,16));if v26 then local v81=0;local v82;while true do if (v81==1) then return v82;end if (v81==0) then v82=v6(v72,v26);v26=nil;v81=1;end end else return v72;end end end);local function v27(v38,v39,v40)if v40 then local v73=0 + 0;local v74;while true do if (v73==(0 + 0)) then v74=(v38/((7 -(1537 -(33 + 1499)))^(v39-(134 -(28 + 105)))))%((6 -4)^(((v40-(1 + 0)) -(v39-((5898 -4404) -(703 + (2216 -(723 + 703)))))) + 1 + 0));return v74-(v74%(1565 -(152 + 1412)));end end else local v75=(2 -0)^(v39-(2 -1));return (((v38%(v75 + v75))>=v75) and (1 + 0)) or (0 + 0);end end local function v28()local v45=0 + 0;local v46;while true do if (v45==0) then v46=v2(v23,v25,v25);v25=v25 + (491 -(369 + 121));v45=469 -(210 + 258);end if (v45==((4 -3) -0)) then return v46;end end end local function v29()local v47,v48=v2(v23,v25,v25 + (721 -(671 + 48)));v25=v25 + 2;return (v48 * (193 + 63)) + v47;end local function v30()local v49,v50,v51,v52=v2(v23,v25,v25 + 3 + 0);v25=v25 + 4;return (v52 * (48697104 -31919888)) + (v51 * (17057 + 48479)) + (v50 * (530 -274)) + v49;end local function v31()local v53=v30();local v54=v30();return (( -(400 -(227 + 171)) * v27(v54,947 -(558 + 357))) + (1621 -(953 + 667))) * ((1265 -(133 + 1130))^(v27(v54,1615 -(842 + 752),23 + 8) -((2236 -1639) + 426))) * ((((v27(v54,1 + 0,20) * ((1 + 1)^(1481 -(291 + 1158)))) + v53)/((3 -1)^(94 -42))) + (436 -(8 + 427)));end local function v32(v41)local v55;if  not v41 then v41=v30();if (v41==(0 -0)) then return "";end end v55=v4(v23,v25,(v25 + v41) -(46 -(28 + 17)));v25=v25 + v41;local v56={};for v69=1, #v55 do v56[v69]=v3(v2(v4(v55,v69,v69)));end return v7(v56);end local v33=v30;local function v34(...)return {...},v12("#",...);end local function v35()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v57==(1367 -(1326 + 38))) then v64=nil;v65=nil;v57=48 -(10 + 34);end if (0~=v57) then else v58=0 -0;v59=nil;v57=250 -(155 + 94);end if (4==v57) then while true do if (v58==(951 -(156 + 792))) then v65=nil;while true do local v99=0;while true do if (v99==0) then if (v59==0) then local v106=37 -(29 + 8);while true do if (v106~=(3 -1)) then else v59=3 -2;break;end if (v106~=0) then else v60={};v61={};v106=1 + 0;end if (v106==(3 -2)) then v62={};v63={v60,v61,nil,v62};v106=2;end end end if ((272 -(26 + 244))~=v59) then else local v107=0;local v108;while true do if (v107~=(0 + 0)) then else v108=0;while true do local v111=0 + 0;while true do if (v111~=(0 -0)) then else if (v108==(783 -(432 + 351))) then local v119=0;while true do if (v119==(0 -0)) then for v209=63 -(30 + 32),v30() do local v210=0 -0;local v211;local v212;local v213;while true do if (v210~=(0 -0)) then else v211=0 -0;v212=nil;v210=1 -0;end if (v210~=(1682 -(1288 + 393))) then else v213=nil;while true do if (v211~=(0 -0)) then else v212=0 -0;v213=nil;v211=1;end if (v211==(1 + 0)) then while true do if (v212~=(0 -0)) then else v213=v28();if (v27(v213,1,1 + 0)==(0 + 0)) then local v295=0 + 0;local v296;local v297;local v298;local v299;while true do if (v295==(0 -0)) then local v318=0 -0;while true do if (v318==(0 + 0)) then v296=0 -0;v297=nil;v318=589 -(400 + 188);end if (v318==(2 -1)) then v295=925 -(572 + 352);break;end end end if (v295==2) then while true do if (v296==(2 + 0)) then local v323=508 -(406 + 102);while true do if ((1516 -(437 + 1079))==v323) then if (v27(v298,1,376 -(251 + 124))==(545 -(35 + 509))) then v299[2 + 0]=v65[v299[2 -0]];end if (v27(v298,1 + 1,1 + 1)==(779 -(256 + 522))) then v299[3]=v65[v299[1 + 2]];end v323=1;end if (v323~=(1 + 0)) then else v296=2 + 1;break;end end end if (v296==(1 + 0)) then local v324=1704 -(1381 + 323);while true do if (v324~=(3 -2)) then else v296=681 -(352 + 327);break;end if (v324~=(353 -(315 + 38))) then else v299={v29(),v29(),nil,nil};if (v297==0) then local v337=0 -0;local v338;local v339;while true do if (v337==(1 + 0)) then while true do if (v338==0) then v339=0 -0;while true do if (v339==(0 -0)) then v299[7 -4]=v29();v299[4]=v29();break;end end break;end end break;end if (v337~=0) then else v338=1712 -(546 + 1166);v339=nil;v337=1;end end elseif (v297==1) then v299[3]=v30();elseif (v297==(190 -(165 + 23))) then v299[1747 -(1308 + 436)]=v30() -(2^(28 -12));elseif (v297~=(1 + 2)) then else local v345=0;local v346;local v347;while true do if (v345~=1) then else while true do if (v346~=0) then else v347=0 + 0;while true do if (v347==(0 -0)) then v299[3]=v30() -(2^16);v299[13 -9]=v29();break;end end break;end end break;end if (v345~=(244 -(243 + 1))) then else v346=0 -0;v347=nil;v345=1 + 0;end end end v324=1;end end end if (v296~=(551 -(16 + 532))) then else if (v27(v298,1920 -(1197 + 720),2 + 1)==(1244 -(555 + 688))) then v299[4]=v65[v299[4]];end v60[v209]=v299;break;end if (v296~=0) then else local v326=0 + 0;while true do if (v326~=(527 -(225 + 301))) then else v296=1;break;end if (0==v326) then v297=v27(v213,2 + 0,3 -0);v298=v27(v213,1 + 3,6);v326=1;end end end end break;end if (v295~=1) then else local v319=1629 -(466 + 1163);while true do if (v319==(400 -(292 + 108))) then v298=nil;v299=nil;v319=2 -1;end if (v319~=(171 -(74 + 96))) then else v295=3 -1;break;end end end end end break;end end break;end end break;end end end for v214=1,v30() do v61[v214-(1 -0)]=v35();end v119=1;end if (v119==(254 -(171 + 82))) then v108=1 + 0;break;end end end if ((1632 -(908 + 723))==v108) then local v120=1813 -(453 + 1360);while true do if (v120==(1714 -(868 + 846))) then for v216=2 -1,v30() do v62[v216]=v30();end return v63;end end end break;end end end break;end end end v99=1448 -(935 + 512);end if (v99~=(1 + 0)) then else if (v59==(1224 -(1120 + 103))) then local v109=0;local v110;while true do if (v109==(970 -(273 + 697))) then v110=1768 -(1125 + 643);while true do if (v110==(1225 -(179 + 1044))) then v59=5 -3;break;end if (v110==(1504 -(1306 + 197))) then for v113=1,v64 do local v114=32 -(23 + 9);local v115;local v116;local v117;local v118;while true do if (v114==(359 -(249 + 109))) then local v192=0;while true do if ((0 -0)~=v192) then else v117=nil;v118=nil;v192=1 + 0;end if (v192==1) then v114=2 -0;break;end end end if (v114==(538 -(468 + 70))) then local v193=0 -0;while true do if (v193~=(2 -1)) then else v114=1159 -(1156 + 2);break;end if (v193~=(1605 -(600 + 1005))) then else v115=0 -0;v116=nil;v193=1 + 0;end end end if (v114==(2 + 0)) then while true do if (v115~=(0 -0)) then else v116=172 -(168 + 4);v117=nil;v115=1 -0;end if (v115~=(1 + 0)) then else v118=nil;while true do if (v116~=(0 -0)) then else local v242=0;local v243;while true do if (v242~=(0 -0)) then else v243=0;while true do if (v243==(1 + 0)) then v116=1;break;end if (v243==(0 + 0)) then local v290=0;local v291;while true do if ((508 -(366 + 142))~=v290) then else v291=0 + 0;while true do if (v291==0) then local v320=0 -0;while true do if (v320~=(1 + 0)) then else v291=1 + 0;break;end if (v320~=0) then else v117=v28();v118=nil;v320=1 + 0;end end end if (v291==(1 -0)) then v243=2 -1;break;end end break;end end end end break;end end end if (v116~=(3 -2)) then else if (v117==(1 -0)) then v118=v28()~=(0 + 0);elseif (v117==(4 -2)) then v118=v31();elseif (v117==(3 + 0)) then v118=v32();end v65[v113]=v118;break;end end break;end end break;end end end v63[13 -10]=v28();v110=5 -3;end if (v110~=(1182 -(473 + 709))) then else v64=v30();v65={};v110=4 -3;end end break;end end end break;end end end break;end if ((1 + 1)~=v58) then else v63=nil;v64=nil;v58=9 -6;end if ((1 + 0)==v58) then local v97=0 + 0;while true do if (v97==1) then v58=1994 -(787 + 1205);break;end if (v97~=(1820 -(159 + 1661))) then else v61=nil;v62=nil;v97=1 + 0;end end end if (v58==(0 -0)) then local v98=0 -0;while true do if ((1 + 0)==v98) then v58=1 -0;break;end if (0~=v98) then else v59=0 -0;v60=nil;v98=1185 -(61 + 1123);end end end end break;end if (v57==2) then v62=nil;v63=nil;v57=3;end if (1==v57) then v60=nil;v61=nil;v57=2 + 0;end end end local function v36(v42,v43,v44)local v66=v42[1];local v67=v42[2];local v68=v42[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v12("#",...) -1;local function v80()local v83=v66;local v84=v67;local v85=v68;local v86=v34;local v87={};local v88={};local v89={};for v94=1345 -(321 + (2994 -(264 + 1706))),v79 do if ((((800 -(74 + 345)) -263)<(988 + 1243)) and (v94>=v85)) then v87[v94-v85]=v78[v94 + (407 -((2147 -(198 + 1735)) + (1257 -(285 + 780))))];else v89[v94]=v78[v94 + (3 -2)];end end local v90=(v79-v85) + 1 + 0;local v91;local v92;while true do local v95=(1610 -(1432 + 178)) -0;local v96;while true do if (((533 + 1519)>=(3849 -3049)) and ((0 + 0)==v95)) then v96=0 -0;while true do if (((1983 -(890 + 1092))==v96) or ((6979 -3331)>4890)) then if ((v92<=15) or ((3710 -((814 -(16 + 683)) + 4))>=(13429 -8692))) then if ((v92<=(17 -10)) or (3298<=((324 + 878) -(73 + 406)))) then if ((v92<=(796 -(617 + 176))) or ((3416 -(11 + 31))==(129 + 1682))) then if ((v92<=((3262 -1713) -(321 + 1227))) or ((1859 -((1108 -678) + 287))>(2982 + 157 + 603 + 458))) then if ((v92==(0 -(0 -0))) or ((3759 + (1301 -(34 + 735)))>=(5574 -(751 + 47)))) then if ((v89[v91[1 + 1]]<=v91[4 + (0 -0)]) or ((150 + 474)>(2848 + 1733))) then v76=v76 + (1 -0);else v76=v91[1814 -(1765 + 46)];end else v89[v91[1307 -(1151 + (360 -206))]]=v91[1093 -(520 + 570)];end elseif ((v92>((4 -2) + (0 -0))) or ((1115 + 1656)==(8665 -3707))) then local v123=(434 -(251 + 183)) + 0;local v124;local v125;while true do if (((1648 + 353)<=((11707 -(625 + 337)) -6767)) and (v123==(835 -(223 + 611)))) then while true do if (((6223 -(841 + 629))>=(5819 -(3015 + 436))) and (v124==(1084 -(482 + 602)))) then v125=v91[1108 -(194 + (3354 -2442))];v89[v125]=v89[v125]();break;end end break;end if ((((2 + 94) -55)<(1346 -(21 + 49))) and (v123==(0 + 0))) then v124=1399 -(474 + 925);v125=nil;v123=274 -(221 + 52);end end else v89[v91[1705 -(1123 + 580)]]=v36(v84[v91[5 -2]],nil,v44);end elseif ((v92<=(4 + 1)) or ((5309 -(8329 -4807))==((12323 -7024) -(814 + 238)))) then if ((v92>(3 + 1)) or ((3495 -2449)==(3964 -(1134 + (399 -104))))) then local v127=0;local v128;while true do if ((v127==(0 + 0)) or ((3604 + 763)<(4184 -(478 + 292)))) then v128=v91[7 -5];v89[v128](v89[v128 + (2 -1)]);break;end end else v89[v91[2 -0]][v91[8 -5]]=v91[919 -(244 + 671)];end elseif (((863 + 305)>(754 -491)) and (v92>6)) then local v131=0 -0;local v132;local v133;local v134;while true do if ((v131==(1254 -(587 + (1015 -349)))) or (((5459 + 486) -(211 + 1577))<(365 + (3083 -(469 + 107))))) then v134=nil;while true do if (((844 + 1790 + 37)==(4045 -((1994 -1100) + 480))) and (v132==((330 + 427) -(465 + 291)))) then while true do if ((1240==(66 + (1930 -(319 + 437)))) and (v133==(596 -(447 + 149)))) then v134=v91[1 + 1];v89[v134]=v89[v134](v13(v89,v134 + ((1 + 0) -0),v91[8 -5]));break;end end break;end if ((v132==((1462 -(581 + 881)) -0)) or (((32343 -21241) -7083)>((14216 -7686) -(1446 + 303)))) then local v220=0 + 0 + 0;while true do if ((4849==(5276 -((949 -(581 + 28)) + 87))) and (v220==(0 + 0))) then v133=0 -0;v134=nil;v220=1 + (0 -0);end if (((3711 -(194 + 297))>=(918 + (1418 -(200 + 1202)))) and (v220==(1 + 0))) then v132=1882 -(710 + 1171);break;end end end end break;end if ((v131==(0 + (0 -0))) or (3879==((1817 -(754 + 900)) + (2368 -(39 + 128))))) then v132=1648 -((3723 -2365) + 290);v133=nil;v131=1 + 0;end end else v89[v91[(957 -(795 + 160)) + 0]]=v89[v91[1 + 0 + (2 -0)]][v91[1651 -(1297 + (935 -(53 + 532)))]];end elseif (((2472 + 2211)>=(1679 -((1530 -(351 + 841)) + 119 + 14))) and (v92<=(1334 -(905 + 418)))) then if ((v92<=(1343 -(142 + 733 + 459))) or ((656 + 2464)<(2987 -(542 + 509)))) then if ((((3301 -(1158 + 340)) -(227 + 1075))<=(11849 -(17435 -9528))) and (v92>(11 -3))) then local v137=(5284 -4106) -(955 + 223);local v138;local v139;while true do if (((7950 -2995)>=((7309 -(643 + 1216)) -3738)) and (v137==(1319 -(558 + 761)))) then v138=0 -0;v139=nil;v137=(3 -2) -0;end if ((v137==(2 -1)) or ((5754 -(531 + 1464))<=(3208 -(210 + 660)))) then while true do if (((3357 -(897 + 44))==((6091 -(345 + 392)) -2938)) and (v138==(41 -(28 + 13)))) then v139=v91[2 + 0];v89[v139](v13(v89,v139 + 1 + 0 + 0,v91[(2780 -(392 + 422)) -(845 + 1118)]));break;end end break;end end else v89[v91[1 + 1]]=v91[(3184 -2149) -(264 + 768)]~=(199 -(115 + 84));end elseif ((v92==(14 -4)) or ((1178 -(35 + 160))>=(1365 -(186 + 71 + 20)))) then v89[v91[2]][v91[1450 -((1935 -(132 + 1169)) + 813)]]=v89[v91[(128 -(79 + 48)) + 3 + 0]];else local v143=0 + 0;local v144;while true do if (((3417 -(335 + 646))==(2505 -(67 + 2))) and ((0 -0)==v143)) then v144=v91[2 -(102 -(86 + 16))];v89[v144]=v89[v144](v89[v144 + ((1 -0) -0)]);break;end end end elseif (((2093 + 2793)>(655 + (4876 -3222))) and (v92<=(6 + 7))) then if ((v92==(12 + 0)) or ((1879 + 354)<((5011 + 325) -4207))) then v44[v91[1419 -(1282 + 134)]]=v89[v91[(5 + 0) -3]];else local v147=0 -0;local v148;local v149;while true do if (((1949 -(1458 + 491))==v147) or ((1354 + 1380)>=(4110 -(393 + 102 + (1092 -667))))) then v148=0 -0;v149=nil;v147=1;end if (((5125 -3526)<(6690 -(2246 + 258))) and (v147==(1 -(0 -0)))) then while true do if ((v148==(0 -0)) or ((3532 -(551 + 913))<=514)) then v149=v91[2];v89[v149]=v89[v149](v13(v89,v149 + (1721 -(295 + 1425)),v77));break;end end break;end end end elseif (((1319 + 3233)>=(164 + 77)) and (v92>((593 -(175 + 408)) + 4))) then v89[v91[105 -(101 + 2)]]={};else v89[v91[(716 + 664) -(728 + 650)]]=v43[v91[1812 -(1763 + 46)]];end elseif (((4901 -(607 + (1249 -(74 + 835))))>(3320 -(629 + 1217))) and (v92<=23)) then if (((720 + 1405)<(5275 -(344 + 1587))) and (v92<=(33 -14))) then if ((v92<=((2518 -844) -(881 + 776))) or ((13279 -(11117 -(119 + 624)))==(2325 -1606))) then if ((v92>(55 -39)) or ((3809 -(1070 + 367))>(4831 -(278 + (3200 -1950))))) then if (v89[v91[9 -7]] or ((1357 -(425 + 584))>=(2963 -(1194 + 126)))) then v76=v76 + (1 -0);else v76=v91[982 -(113 + (1049 -(93 + 90)))];end else local v153=329 -(288 + 20 + 21);local v154;local v155;local v156;local v157;local v158;while true do if (((2800 + 2070)>=(8902 -4746)) and (v153==(64 -(17 + 45)))) then v158=nil;while true do if ((v154==(0 + 0)) or ((6428 -(1177 + 362))<=(2969 + (632 -(344 + 138))))) then local v224=0 -0;local v225;while true do if (((768 + 2832)<=(7495 -3539)) and ((1190 -(493 + 697))==v224)) then v225=1742 -((2856 -(1002 + 270)) + 158);while true do if ((v225==(0 + 0)) or ((236 -(22 + 55))>((14078 -8196) -(761 + 416)))) then local v287=(0 + 0) -0;while true do if (((1004 + 2070)==(4813 -(550 + 1189))) and (v287==(3 -2))) then v225=583 -(77 + 416 + 89);break;end if ((v287==(142 -(77 + 65))) or ((6744 -5155)<=(2931 -(633 + 308 + 561)))) then v155=v91[2 + 0];v156,v157=v86(v89[v155](v13(v89,v155 + 1 + 0,v91[3])));v287=1 -0;end end end if ((v225==(2 -1)) or (((1116 -(951 + 90)) -(7 + 42))>(2307 -1337))) then v154=(1977 -(661 + 791)) -(140 + 384);break;end end break;end end end if (((1911 + 2550)>(62 + 3554)) and (v154==1)) then local v226=(25 -(11 + 14)) -0;local v227;while true do if (((814 -(497 + 8))<=(141 + 4669)) and (v226==(0 + 0))) then v227=0 + 0;while true do if (((1404 + 833)>=(1271 + 45 + 37)) and ((1312 -(507 + 805))==v227)) then local v288=1471 -(614 + 857);while true do if ((v288==((3 -2) + 0)) or ((3406 -(48 + 4 + 1289))>(7236 -3571))) then v227=1 + (0 -0);break;end if ((v288==(0 -0)) or (((4302 + 11593) -12516)<=(219 + (1495 -(865 + 378))))) then v77=(v157 + v155) -((1 -0) + 0);v158=0 -0;v288=2 -1;end end end if ((((2577 -812) + 1257)>=(10337 -7635)) and (v227==((4501 -2841) -(224 + 1435)))) then v154=5 -3;break;end end break;end end end if ((((14740 -7529) -(612 + 3421))<(4123 + (2264 -1469))) and (v154==(1794 -(1392 + (2057 -(106 + 1551)))))) then for v245=v155,v77 do local v246=0 + 0;local v247;local v248;while true do if (((2001 + (2977 -(568 + 1382)))==(2594 + 434)) and (v246==((0 -0) -0))) then v247=0 -0;v248=nil;v246=1374 -((4920 -3880) + 333);end if ((((7905 -(1574 + 367)) -2308)>=(395 + 1488)) and (v246==(2 -1))) then while true do if ((v247==(1302 -(1039 + (724 -461)))) or ((65 + 457)==(2269 -961))) then v248=1627 -(736 + 190 + 701);while true do if (((0 + 0 + 0)==v248) or ((2898 -(808 + 27))>=(15545 -11050))) then v158=v158 + (2 -1);v89[v245]=v156[v158];break;end end break;end end break;end end end break;end end break;end if (((4098 -(1038 + 1374))>=(3 + 13)) and (v153==(0 -0))) then v154=1703 -((5107 -3417) + 13);v155=nil;v153=1 -0;end if ((v153==(2 -1)) or ((4887 -(327 + 432))<=(4427 -(684 + 660)))) then v156=nil;v157=nil;v153=1568 -(130 + 1436);end end end elseif ((v92>(25 -7)) or ((7090 -5594)>=(712 + 2393))) then for v194=v91[(4 -2) + (1310 -(1143 + 167))],v91[5 -2] do v89[v194]=nil;end else local v159=0 -0;local v160;local v161;local v162;local v163;while true do if ((v159==((225 -(151 + 69)) -(145 -(52 + 90)))) or ((674 + 2503)>=(1516 + 3078))) then while true do if ((1386<=(5454 -(835 + 767))) and ((41 -(33 + (934 -(39 + 888))))==v160)) then v163=v91[719 -((1086 -615) + 245)];for v249=2 -(483 -(158 + 324)),v163 do v162[v249]=v89[v161 + v249];end break;end if ((v160==(1693 -(1125 + 568))) or ((5780 -(132 + 983))<=(9571 -5931))) then v161=v91[2 -0];v162=v89[v161];v160=1702 -((2306 -(526 + 213)) + 134);end end break;end if (((4693 -(519 + 1212))==(116 + 2846)) and (v159==(2 -1))) then v162=nil;v163=nil;v159=(1448 -993) -(21 + 432);end if ((v159==(0 + 0 + 0)) or ((2464 -(17 + 38))>(1853 + (1104 -323)))) then v160=0 -(815 -(282 + 533));v161=nil;v159=22 -(12 + 9);end end end elseif ((v92<=((2476 -(1203 + 298)) -(483 + (1049 -(304 + 274))))) or ((3378 + 1289)<=(3299 -1859))) then if (((3466 + (1751 -(22 + 405)))>=(379 + 2623)) and (v92>(57 -37))) then local v164=0 -0;local v165;local v166;local v167;local v168;while true do if ((v164==(902 -(213 + 688))) or ((4112 -2264)<(1476 -(3925 -3018)))) then v167=nil;v168=nil;v164=1949 -(1767 + (997 -(53 + 764)));end if ((v164==(4 -2)) or ((801 + 576)>3511)) then while true do if ((v165==(791 -(494 + 95 + 202))) or (105>=(425 + 2051))) then local v231=0;while true do if ((v231==(1 + 0)) or ((5734 -(860 + 802))<=(1356 -950))) then v165=703 -(649 + 53);break;end if ((((0 -0) -0)==v231) or ((4529 -((1642 -(890 + 280)) + 1488))<(2493 -(1645 + 8)))) then v166=0 + 0;v167=nil;v231=4 -3;end end end if ((((3546 -(419 + 392)) -((1700 -(1579 + 81)) + 90))>(48 + 326)) and (v165==(1 -(0 -0)))) then v168=nil;while true do if (((1145 + 294)<=(1305 + (1983 -(315 + 41)))) and (v166==(1759 -(900 + 859)))) then local v264=0 -0;local v265;while true do if ((((669 -(573 + 80)) -6)==((134 -86) -38)) and (v264==(0 -0))) then v265=0 + 0;while true do if (((1506 -(236 + 169))<(4061 -((540 -352) + 68))) and (v265==(1870 -(1474 + 396)))) then v167=v91[7 -(3 + 1)];v168=v89[v167];v265=1 -0;end if (((885 -(67 + 54))>(109 + 84 + 63)) and (v265==(1 -0))) then v166=1 + (1368 -(1033 + 335));break;end end break;end end end if ((((10885 -(1310 + 601)) -5945)>(6288 -3891)) and (((1398 -(5 + 1392)) -0)==v166)) then for v271=v167 + (607 -((602 -332) + 336)),v91[3 + 1] do v168=v168   .. v89[v271];end v89[v91[7 -5]]=v168;break;end end break;end end break;end if ((v164==(0 -0)) or ((7073 -(270 + 2032))<(5502 -(197 + (1044 -(71 + 40)))))) then v165=0 -0;v166=nil;v164=1194 -(40 + 1153);end end else v76=v91[3 + (12 -(7 + 5))];end elseif ((v92>(9 + (59 -46))) or ((4296 -743)<=(15124 -11906))) then local v170=(318 -(207 + 111)) + 0;local v171;local v172;local v173;while true do if ((((6199 -(433 + 866)) -(2023 + 1174))>=(2851 -1625)) and (v170==(0 + 0 + 0))) then v171=0 + 0;v172=nil;v170=1 + 0;end if ((v170==(1 + (0 -0))) or ((755 -(377 + (789 -(441 + 44))))>(10110 -6657))) then v173=nil;while true do if ((v171==(1479 -((1216 -(374 + 151)) + 787))) or ((4488 -(10 + 304))<=(5260 -(290 + 1114)))) then v89[v172 + 1 + 0]=v173;v89[v172]=v173[v91[1016 -(672 + 331 + 9)]];break;end if (((0 -0)==v171) or (((3569 -(514 + 608)) + (3517 -1660))==(622 + 228 + 1834))) then v172=v91[2 + 0];v173=v89[v91[2 + 1]];v171=2 -1;end end break;end end else do return;end end elseif (((702 + 50)<(2266 + 1137)) and (v92<=(7 + 20))) then if ((v92<=(21 + 4)) or ((2678 -944)>=(7534 -5470))) then if (((1975 -(85 + 423))<=((105 -43) + 3287)) and (v92>(17 + 7))) then local v174=0;local v175;local v176;local v177;local v178;local v179;local v180;while true do if (((297 + (378 -195))<(15207 -11328)) and (v174==(1 -0))) then v177=nil;v178=nil;v174=2 -0;end if (((1604 -(214 + (244 -(65 + 63))))==1274) and (v174==(1803 -(1330 + (1376 -906))))) then while true do if (((1975 -(259 + 1232))<(2976 + 1435)) and ((5 -(2 + 1))==v175)) then v180=nil;while true do if (((2051 + 14)==(5162 -3097)) and (v176==(1 + 1))) then for v272=v177,v77 do local v273=0 + 0;local v274;while true do if ((v273==((1094 -(8 + 77)) -(803 + 206))) or ((464 + 4068)<=(2898 -(443 + 1146)))) then v274=888 -(284 + 604);while true do if ((v274==(0 + 0)) or (((1966 -(1341 + 582)) + (266 -162))>((994 + 4482) -(560 + 515)))) then v180=v180 + (1568 -(1509 + 58));v89[v272]=v178[v180];break;end end break;end end end break;end if ((v176==(660 -((430 -(164 + 81)) + 475))) or ((2135 -(162 + 486))>(182 + 2171))) then local v267=1057 -(860 + 197);while true do if ((v267==(1 -0)) or ((5614 -(556 + 163 + 81))<=(661 + 91 + 2788))) then v176=2 -(1 + 0);break;end if ((v267==(1010 -(978 + 32))) or ((12949 -9202)>=(4401 + 234))) then v177=v91[3 -1];v178,v179=v86(v89[v177](v89[v177 + (273 -(4 + 268))]));v267=1 + 0;end end end if (((262 + 573)<(484 + (1167 -797))) and (v176==(1248 -(724 + 523)))) then local v268=113 -(97 + 16);local v269;while true do if ((279<(4387 -(438 + 1289))) and (v268==(0 + 0))) then v269=275 -(221 + 54);while true do if ((v269==(1 -0)) or ((4281 -(2386 -1198))>=(509 + 3031))) then v176=3 -(1 + 0);break;end if ((v269==(0 + 0)) or ((5038 -(1051 + 770))>(11710 -6967))) then local v303=0 + 0;while true do if ((((3922 -(137 + 32)) -(181 + 139))==(5076 -(1308 + 335))) and (v303==((0 + 0) -0))) then v77=(v179 + v177) -(1 + 0);v180=1887 -(1083 + 804);v303=1 -0;end if ((v303==(1 + 0)) or ((2506 -(363 + 635))>(4067 -(155 + 1000)))) then v269=1 + 0 + 0;break;end end end end break;end end end end break;end if (((5009 -(368 + 1126))>=(122 + 384)) and (v175==(0 + 0))) then local v237=0 + 0;while true do if ((v237==((1337 -(602 + 319)) -(272 + 144))) or ((930 + 1754 + 582)>=(1058 + (10323 -7122)))) then v176=0 -0;v177=nil;v237=1;end if ((v237==(1 + 0)) or ((613 + 468)>3664)) then v175=1 + 0 + 0;break;end end end if ((v175==(4 -3)) or ((812 + 3767)<=(25 + 131 + 99))) then v178=nil;v179=nil;v175=(3661 -2358) -(150 + 1151);end end break;end if ((v174==(199 -((501 -(309 + 126)) + 133))) or ((2508 -(194 + 786))>=(5939 -2789))) then v175=0 -0;v176=nil;v174=2 -1;end if (((808 -(43 + 346))==(99 + 320)) and (v174==((1986 -(315 + 1669)) -(0 -0)))) then v179=nil;v180=nil;v174=(2939 -1773) -((2294 -1135) + 3 + 1);end end else local v181=0 + 0;local v182;local v183;local v184;while true do if ((v181==(0 + 0 + 0)) or ((114 + 269)==(8273 -(14965 -9608)))) then v182=1309 -(1070 + 239);v183=nil;v181=1 + 0;end if (((5247 -(75 + 354))>(1683 + 1505)) and (((1500 -(1222 + 275)) -2)==v181)) then v184=nil;while true do if ((((0 + 0) -0)==v182) or ((2376 + 363)>(468 + 654 + (2414 -(63 + 708))))) then v183=v91[(2553 -826) -(340 + 1017 + 368)];v184={};v182=(3 -2) -(1801 -(1705 + 96));end if ((v182==(700 -(374 + 325))) or ((7594 -(4950 -2125))<(104 + 27 + (4105 -(29 + 465))))) then for v252=(2 -1) -0, #v88 do local v253=(2932 -(456 + 777)) -(1389 + 310);local v254;local v255;local v256;while true do if ((v253==(1118 -(535 + 582))) or (((1827 -(649 + 236)) -716)==(3176 + 348))) then v256=nil;while true do if ((((3221 + 1221) -1839)>=(786 -(389 + 157))) and (v254==((2072 -(100 + 62)) -(233 + 1677)))) then v255=0 + 0;v256=nil;v254=1 + 0;end if ((v254==1) or (1914==(4397 -(3494 -(410 + 1208))))) then while true do if (((7151 -(16316 -10809))<(8134 -4708)) and (v255==(0 + 0))) then v256=v88[v252];for v311=0 + 0, #v256 do local v312=0;local v313;local v314;local v315;while true do if ((v312==(0 -0)) or ((11053 -6896)<=(3245 -1861))) then local v321=(2015 -1003) -(720 + 292);while true do if ((v321==(1 + 0 + 0)) or ((5394 -(5999 -2682))==(6349 -(1482 + (1309 -(984 + 43)))))) then v312=2 -1;break;end if ((v321==(0 -0)) or ((9157 -5406)<(3890 -(378 + 569)))) then v313=v256[v311];v314=v313[381 -(220 + 160)];v321=3 -2;end end end if ((v312==(3 -2)) or ((6324 -4866)<(2032 -(265 + (2340 -(139 + 557)))))) then v315=v313[2 + 0];if ((4568==((30533 -19131) -6834)) and (v314==v89) and (v315>=v183)) then local v327=0 + (554 -(15 + 539));local v328;while true do if ((v327==(0 -0)) or (((24570 -18369) -3918)<((3366 -(210 + 1778)) -911))) then v328=(1461 -(460 + 1001)) + 0;while true do if ((v328==(0 -(0 + 0))) or ((4185 -(240 + 27 + 1256))>(4321 -1473))) then v184[v315]=v314[v315];v313[(2 -1) + (1561 -(641 + 920))]=v184;break;end end break;end end end break;end end end break;end end break;end end break;end if ((v253==(0 + (0 -0))) or ((81 + 3140)>=(4942 -(269 + 265)))) then v254=114 -(108 + 6);v255=nil;v253=1 + (1474 -(389 + 1085));end end end break;end end break;end end end elseif ((v92==(24 + 1 + 1)) or ((2947 -(683 + 53 + 14))<=(4999 -2972))) then if ((v91[1438 -((1572 -1099) + 963)]==v89[v91[2 + 2]]) or ((22 + 371)>(1510 -(41 + 349)))) then v76=v76 + 1 + 0;else v76=v91[4 -1];end elseif (((217 + 831)<(462 + 674)) and (v89[v91[2 + 0]]==v91[7 -3])) then v76=v76 + 1 + 0;else v76=v91[3];end elseif ((v92<=((1962 -(1090 + 766)) -77)) or ((368 -245)>=(5941 -3645))) then if ((v92==28) or (((4833 -(187 + 483)) -(647 + 1267))==(349 -154))) then v89[v91[7 -(722 -(533 + 184))]]();else local v185=0 -0;local v186;local v187;local v188;local v189;while true do if ((v185==((348 -68) -(78 + 14 + 186))) or ((2749 -1588)<=78)) then while true do if (((3649 -(370 + 71))==(6052 -(1360 + 1484))) and ((6 -4)==v186)) then for v257=1 + 0,v91[556 -(123 + 212 + 217)] do local v258=1785 -((2643 -(865 + 1095)) + 405 + 697);local v259;local v260;while true do if (((5064 -3586)<(2195 + 184)) and (v258==(0 + 0))) then v259=0 + 0;v260=nil;v258=1827 -((93 -46) + 1779);end if ((v258==(1 + 0)) or ((1363 + 927)<=(1358 -(57 + 69)))) then while true do if ((v259==(0 -0)) or ((6 + 703)>(8813 -5636))) then v76=v76 + (66 -(13 + 52));v260=v83[v76];v259=2 -1;end if (((1528 + 3106)>=(5035 -(96 + 929))) and (v259==(2 -1))) then if ((v260[1 + 0]==(449 -(61 + 357))) or ((7603 -(5804 -(1513 + 431)))<(829 + 1206))) then v189[v257-(1168 -(483 + 413 + 271))]={v89,v260[5 -2]};else v189[v257-(952 -(913 + 38))]={v43,v260[11 -8]};end v88[ #v88 + (1416 -((1960 -(1144 + 807)) + 1406))]=v189;break;end end break;end end end v89[v91[1938 -(1538 + 398)]]=v36(v187,v188,v44);break;end if (((1332 -(536 + 378))<(204 + 608)) and (v186==(0 -0))) then v187=v84[v91[9 -6]];v188=nil;v186=1 -(558 -(88 + 470));end if (((1 + (352 -(92 + 260)))==v186) or ((6303 -3958)<(104 + 24 + 25))) then local v241=1153 -(396 + 757);while true do if ((((20921 -13196) -4946)<=(999 + 3238)) and (v241==((1 -0) + 0))) then v186=5 -3;break;end if (((1927 -(1199 + 728))==v241) or ((741 -241)<=(45 + (101 -(35 + 31))))) then v189={};v188=v10({},{__index=function(v275,v276)local v280=875 -((175 -131) + (909 -(51 + 27)));local v281;while true do if (((1337 + 7)==((608 + 771) -(4 + 31))) and (v280==(0 -0))) then v281=v189[v276];return v281[1 + 0][v281[1 + 1]];end end end,__newindex=function(v277,v278,v279)local v282=0 -(0 + 0);local v283;local v284;while true do if ((v282==(1 -(0 + 0))) or ((1954 -935)>=1327)) then while true do if (((3816 + 1055)>(163 + 514)) and (v283==((0 -0) -(1132 -(274 + 858))))) then v284=v189[v278];v284[1 + 0][v284[472 -(357 + (146 -33))]]=v279;break;end end break;end if ((v282==(0 + (0 -0))) or ((4227 -(830 + 570))>((9564 -6440) + 524))) then v283=1120 -(610 + 510);v284=nil;v282=2 -1;end end end});v241=790 -((668 -319) + 440);end end end end break;end if (((1284 + 2258)==(15 + 3527)) and (v185==(355 -(201 + 154)))) then v186=0 -(0 + 0);v187=nil;v185=1 + 0;end if ((v185==(1565 -(214 + 979 + 371))) or (((3832 -(362 + 165)) -2521)<(75 + 371))) then v188=nil;v189=nil;v185=3 -1;end end end elseif ((v92<=(12 + 18)) or ((3066 -(104 + 655 + 245))>=(1027 + 2307))) then v89[v91[2]]=v44[v91[2 + 1]];elseif ((v92==(1085 -(143 + 911))) or ((5351 -(85 + 290))<(2812 -2073))) then v89[v91[(2297 -(111 + 1082)) -(1072 + 30)]]=v89[v91[1296 -(461 + 832)]];else local v202=0 + 0;local v203;local v204;local v205;while true do if (((0 -0)==v202) or ((1132 + 1590)<(2897 -(544 + 43 + 23)))) then v203=1056 -(666 + 143 + 247);v204=nil;v202=(625 -(427 + 197)) + 0;end if ((((1 -0) + 0)==v202) or ((11883 -8862)>(911 + 2506))) then v205=nil;while true do if ((v203==(1316 -(471 + (1071 -(28 + 198))))) or ((534 + 651)==2929)) then local v261=0;while true do if (((3145 + 1066)>(806 + (2855 -(39 + 336)))) and (v261==((745 -(16 + 190)) -(333 + 205)))) then v203=1128 -(608 + 20 + 499);break;end if ((v261==((0 + 0) -0)) or ((2665 -773)<=((3817 -(963 + 516)) -(2585 -(1001 + 857))))) then v204=v91[6 -(1 + 3)];v205=v89[v204];v261=1;end end end if ((v203==((19 + 502) -(182 + 338))) or ((13296 -8300)<(4904 -1844))) then for v270=v204 + (2 -1),v91[(261 + 159) -(59 + 151 + 207)] do v8(v205,v89[v270]);end break;end end break;end end end v76=v76 + 1 + 0;break;end if ((v96==(0 -(630 -(503 + 127)))) or ((2174 -1484)>(4967 -(125 + 70)))) then v91=v83[v76];v92=v91[(1717 -(1112 + 602)) -2];v96=1;end end break;end end end end A,B=v34(v11(v80));if  not A[1] then local v93=v42[4][v76] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v36(v35(),{},v24)(...);end;v0=4;end if (2==v0) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then v15("LOL!A03O00028O00026O00F03F026O000840026O001040027O0040026O001440030C3O0043726561746542752O746F6E03043O004E616D6503143O005368696674202B2050202D2046722O652043616D03083O0043612O6C6261636B03093O00437265617465546162030B3O004C6F63616C506C61796572022O00A0E9AAB3F041030D3O0043726561746553656374696F6E03153O0053656374696F6E202D204C6F63616C506C61796572030D3O00486561646C652O73202846452903083O00476F64204D6F6465026O001840031D3O0056202D2046616365204368616E676572202B204645204B6F72626C6F7803203O00285072652O732027202C2027202920412O6C20526F626C6F7820456D6F74657303113O00416E696D6174696F6E204368616E676572030B3O0052656A6F696E2047616D6503093O00496E66205965696C64026O002040030B3O00482O74705365727669636503043O0067616D65030A3O0047657453657276696365030B3O00576562682O6F6B5F55524C03793O00682O7470733A2O2F646973636F72642E636F6D2F6170692F776562682O6F6B732F31303633352O372O3036313233353332332O382F7A723863377871546131706775655A45646564337A3833566B6670304555706C435646364E522D5238494737674A51416D674C3256766937765179754D786A66726941462O033O0073796E03073O00726571756573742O033O0055726C03063O004D6574686F6403043O00504F535403073O0048656164657273030C3O00436F6E74656E742D5479706503103O00612O706C69636174696F6E2F6A736F6E03043O00426F6479030A3O004A534F4E456E636F646503073O00636F6E74656E7403143O002O3F202B3120536372697074204578656375746503063O00656D6265647303053O007469746C6503223O002O2A596F7572207363726970742068617320622O656E206578656375746564212O2A030B3O006465736372697074696F6E03073O00506C6179657273031C3O00206861732065786563757465642074686520736372697074206F6E2003123O004D61726B6574706C61636553657276696365030E3O0047657450726F64756374496E666F03073O00506C616365496403043O007479706503043O007269636803053O00636F6C6F7203083O00746F6E756D626572023O00E02OFF6F4103063O006669656C647303043O006E616D65030A3O00506C616365204944203A03053O0076616C756503063O00696E6C696E652O01030C3O00446973706C61794E616D653A030B3O00446973706C61794E616D6503093O00557365726E616D653A03083O00557365722049643A03063O00557365724964030C3O00412O636F756E74204167653A030A3O00412O636F756E7441676503113O004C6F6164436F6E66696775726174696F6E030C3O00736574636C6970626F61726403393O00682O7470733A2O2F6C696E6B2D7461726765742E6E65742F3437333534372F6472656172792D6F2O666963616C2D6B65792D73797374656D31030C3O0043726561746557696E646F7703193O00447265617279204F2O66696369616C20496E74657266616365030C3O004C6F6164696E675469746C65030F3O00447265617279204F2O66696369616C030F3O004C6F6164696E675375627469746C65030D3O0062792040346B6777234O3403133O00436F6E66696775726174696F6E536176696E6703073O00456E61626C6564030A3O00466F6C6465724E616D6503143O00447265617279204F2O66696369616C204461746103083O0046696C654E616D6503143O004472656172795F4F2O66696369616C5F4461746103073O00446973636F726403063O00496E76697465030A3O0057652O706B614B363245030D3O0052656D656D6265724A6F696E7303093O004B657953797374656D030B3O004B657953652O74696E677303053O005469746C6503083O005375627469746C6503273O004B65792053797374656D20284C696E6B20436F7069656420746F20436C6970426F6172642E292003043O004E6F746503283O004A6F696E2074686520646973636F72642028646973636F72642E2O672F57652O706B614B36324529030A3O00447265617279204B657903073O00536176654B6579030F3O00477261624B657946726F6D5369746501002O033O004B657903243O006D7178337A48382O5371406B515434562A79663259484D6E4C694B372O4A496E4121757303063O004E6F74696679031E3O00447265617279204F2O666963616C2076312E382E39204C6F61646564212003073O00436F6E74656E74033F3O0048652O6C6F20447265617279204F2O666963616C277320496E746572666163652068617320622O656E2053752O63652O7366752O6C79204C6F61646564212003083O004475726174696F6E03053O00496D61676503073O00416374696F6E7303063O0049676E6F726503053O004F6B617921030F3O0047616D652053752O706F727465642103343O00546869732067616D652069732053752O706F727420616E6420776F726B73207769746820447265617279204F2O66696369616C2E03043O004D61696E03093O004C6F77657220474658030E3O0053656374696F6E202D204D61696E030D3O005A202D20416E7469204C6F636B03173O0051202D2053747265616D61626C652041696D204C6F636B030A3O0041696D20566569776572026O001C4003123O0053652O74696E6773202B204372656469747303173O0050726F6772616D65642062792040346B6777234O3403173O00436F707920526F626C6F782047726F7570204C696E6B2103123O0054657374656420627920403762234O3703143O00436F707920446973636F7264205365727665722103083O00466C79202858292003103O0046616B652053702O656420476C696368030C3O00437265617465536C6964657203093O0057616C6B53702O656403053O0052616E6765026O003040026O005E4003093O00496E6372656D656E7403063O0053752O66697803053O0053702O6564030C3O0043752O72656E7456616C756503043O00466C616703093O004A756D70506F776572026O004940026O006940026O002440030B3O002O31382O36383938352O39030A3O0035363032302O35333934030A3O0032372O382O3239333736030A3O00393832342O32313O33030A3O003938322O35313533353603043O0046696E64030A3O006C6F6164737472696E6703073O00482O747047657403403O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F73686C6578776172652F5261796669656C642F6D61696E2F736F7572636503053O007461626C6503043O0066696E6403083O00746F737472696E6703043O004B69636B03133O0047616D652069736E742073752O706F7274656403073O0067657467656E76030A3O005365637572654D6F646503133O0053656374696F6E202D205574696C697469657303063O0042742O6F6C7303083O004368617420537079030A3O00547572746C652053707903093O005574696C6974696573002A022O0012013O00014O0013000100093O00261B3O0007000100010004143O00070001001201000100014O0013000200023O0012013O00023O00261B3O000B000100030004143O000B00012O0013000700083O0012013O00043O000E1A0005000F00013O0004143O000F00012O0013000500063O0012013O00033O00261B3O0013000100020004143O001300012O0013000300043O0012013O00053O00261B3O0002000100040004143O000200012O0013000900093O00261B00010042000100060004143O00420001001201000A00013O00261B000A0028000100010004143O00280001002017000B000500072O000F000D3O0002003004000D00080009002O02000E5O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B0004000B001201000D000C3O001201000E000D4O0007000B000E00022O001F0005000B3O001201000A00023O00261B000A0036000100020004143O00360001002017000B0005000E001201000D000F4O0007000B000D00022O001F0006000B3O002017000B000500072O000F000D3O0002003004000D00080010002O02000E00013O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00053O00261B000A0019000100050004143O00190001002017000B000500072O000F000D3O0002003004000D00080011002O02000E00023O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000100123O0004143O004200010004143O0019000100261B00010073000100040004143O00730001001201000A00013O00261B000A0050000100050004143O00500001002017000B000500072O000F000D3O0002003004000D00080013002O02000E00033O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000100063O0004143O00730001000E1A000200610001000A0004143O00610001002017000B000500072O000F000D3O0002003004000D00080014002O02000E00043O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B000500072O000F000D3O0002003004000D00080015002O02000E00053O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00053O000E1A000100450001000A0004143O00450001002017000B000500072O000F000D3O0002003004000D00080016002O02000E00063O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B000500072O000F000D3O0002003004000D00080017002O02000E00073O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00023O0004143O0045000100261B000100D3000100180004143O00D3000100121E000A001A3O002017000A000A001B001201000C00194O0007000A000C000200120C000A00193O001201000A001D3O00120C000A001C3O00121E000A001E3O002006000A000A001F2O000F000B3O000400121E000C001C3O00100A000B0020000C003004000B002100222O000F000C3O0001003004000C0024002500100A000B0023000C00121E000C00193O002017000C000C00272O000F000E3O0002003004000E002800292O000F000F00014O000F00103O00050030040010002B002C00121E0011001A3O00200600110011002E00200600110011000C0020060011001100080012010012002F3O00121E0013001A3O00201700130013001B001201001500304O000700130015000200201700130013003100121E0015001A3O0020060015001500322O00070013001500020020060013001300082O001500110011001300100A0010002D001100300400100033003400121E001100363O001201001200374O000B00110002000200100A0010003500112O000F001100054O000F00123O000300300400120039003A00121E0013001A3O00200600130013003200100A0012003B00130030040012003C003D2O000F00133O000300300400130039003E00121E0014001A3O00200600140014002E00200600140014000C00200600140014003F00100A0013003B00140030040013003C003D2O000F00143O000300300400140039004000121E0015001A3O00200600150015002E00200600150015000C00200600150015000800100A0014003B00150030040014003C003D2O000F00153O000300300400150039004100121E0016001A3O00200600160016002E00200600160016000C00200600160016004200100A0015003B00160030040015003C003D2O000F00163O000300300400160039004300121E0017001A3O00200600170017002E00200600170017000C00200600170017004400100A0016003B00170030040016003C003D2O001200110005000100100A0010003800112O0012000F0001000100100A000E002A000F2O0007000C000E000200100A000B0026000C2O000B000A000200022O001F0009000A3O002017000A000300452O0005000A000200010004143O0028020100261B000100202O0100020004143O00202O01001201000A00013O000E1A000100F70001000A0004143O00F7000100121E000B00463O001201000C00474O0005000B00020001002017000B000300482O000F000D3O0007003004000D00080049003004000D004A004B003004000D004C004D2O000F000E3O0003003004000E004F003D003004000E00500051003004000E0052005300100A000D004E000E2O000F000E3O0003003004000E004F003D003004000E00550056003004000E0057003D00100A000D0054000E003004000D0058003D2O000F000E3O0007003004000E005A004B003004000E005B005C003004000E005D005E003004000E0052005F003004000E0060003D003004000E00610062003004000E0063006400100A000D0059000E2O0007000B000D00022O001F0004000B3O001201000A00023O00261B000A00162O0100020004143O00162O01002017000B000300652O000F000D3O0005003004000D005A0066003004000D00670068003004000D00690006003004000D006A000D2O000F000E3O00012O000F000F3O0002003004000F0008006D002O02001000083O00100A000F000A001000100A000E006C000F00100A000D006B000E2O0009000B000D0001002017000B000300652O000F000D3O0005003004000D005A006E003004000D0067006F003004000D00690006003004000D006A000D2O000F000E3O00012O000F000F3O0002003004000F0008006D002O02001000093O00100A000F000A001000100A000E006C000F00100A000D006B000E2O0009000B000D0001001201000A00053O00261B000A00D6000100050004143O00D60001002017000B0004000B001201000D00703O001201000E000D4O0007000B000E00022O001F0005000B3O001201000100053O0004143O00202O010004143O00D6000100261B0001004E2O0100050004143O004E2O01001201000A00013O00261B000A002E2O0100050004143O002E2O01002017000B000500072O000F000D3O0002003004000D00080071002O02000E000A3O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000100033O0004143O004E2O0100261B000A003C2O0100010004143O003C2O01002017000B0005000E001201000D00724O0007000B000D00022O001F0006000B3O002017000B000500072O000F000D3O0002003004000D00080073002O02000E000B3O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00023O00261B000A00232O0100020004143O00232O01002017000B000500072O000F000D3O0002003004000D00080074002O02000E000C3O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B000500072O000F000D3O0002003004000D00080075002O02000E000D3O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00053O0004143O00232O0100261B000100802O0100760004143O00802O01001201000A00013O00261B000A00602O0100010004143O00602O01002017000B0005000E001201000D00774O0007000B000D00022O001F0006000B3O002017000B000500072O000F000D3O0002003004000D0008007800061D000E000E000100012O001F3O00033O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00023O00261B000A006C2O0100050004143O006C2O01002017000B000500072O000F000D3O0002003004000D0008007900061D000E000F000100012O001F3O00033O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000100183O0004143O00802O0100261B000A00512O0100020004143O00512O01002017000B000500072O000F000D3O0002003004000D0008007A00061D000E0010000100012O001F3O00033O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B000500072O000F000D3O0002003004000D0008007B00061D000E0011000100012O001F3O00033O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00053O0004143O00512O0100261B000100C12O0100120004143O00C12O01001201000A00013O00261B000A008C2O0100050004143O008C2O01002017000B0004000B001201000D00773O001201000E000D4O0007000B000E00022O001F0005000B3O001201000100763O0004143O00C12O0100261B000A009D2O0100010004143O009D2O01002017000B000500072O000F000D3O0002003004000D0008007C002O02000E00123O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B000500072O000F000D3O0002003004000D0008007D002O02000E00133O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00023O000E1A000200832O01000A0004143O00832O01002017000B0005007E2O000F000D3O0007003004000D0008007F2O000F000E00023O001201000F00813O001201001000824O0012000E0002000100100A000D0080000E003004000D00830002003004000D00840085003004000D00860081003004000D00870085002O02000E00143O00100A000D000A000E2O0007000B000D00022O001F0008000B3O002017000B0005007E2O000F000D3O0007003004000D000800882O000F000E00023O001201000F00893O0012010010008A4O0012000E0002000100100A000D0080000E003004000D0083008B003004000D00840088003004000D00860089003004000D00870088002O02000E00153O00100A000D000A000E2O0007000B000D00022O001F0008000B3O001201000A00053O0004143O00832O0100261B000100F92O0100010004143O00F92O01001201000A00013O00261B000A00D12O0100010004143O00D12O012O000F000B00053O001201000C008C3O001201000D008D3O001201000E008E3O001201000F008F3O001201001000904O0012000B000500012O001F0002000B3O002O02000B00163O00120C000B00913O001201000A00023O000E1A000500DD2O01000A0004143O00DD2O0100121E000B00923O00121E000C001A3O002017000C000C0093001201000E00944O0010000C000E4O000D000B3O00022O0003000B000100022O001F0003000B3O001201000100023O0004143O00F92O0100261B000A00C42O0100020004143O00C42O0100121E000B00953O002006000B000B00962O001F000C00023O00121E000D00973O00121E000E001A3O002006000E000E00322O0019000D000E4O000D000B3O0002000611000B00EC2O013O0004143O00EC2O0100121E000B00914O001C000B000100010004143O00F42O0100121E000B001A3O002017000B000B001B001201000D002E4O0007000B000D0002002006000B000B000C002017000B000B0098001201000D00994O0009000B000D000100121E000B009A4O0003000B00010002003004000B009B003D001201000A00053O0004143O00C42O0100261B00010016000100030004143O00160001001201000A00013O00261B000A000A020100020004143O000A0201002017000B0005000E001201000D009C4O0007000B000D00022O001F0006000B3O002017000B000500072O000F000D3O0002003004000D0008009D002O02000E00173O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000A00053O00261B000A0015020100050004143O00150201002017000B000500072O000F000D3O0002003004000D0008009E002O02000E00183O00100A000D000A000E2O0007000B000D00022O001F0007000B3O001201000100043O0004143O0016000100261B000A00FC2O0100010004143O00FC2O01002017000B000500072O000F000D3O0002003004000D0008009F002O02000E00193O00100A000D000A000E2O0007000B000D00022O001F0007000B3O002017000B0004000B001201000D00A03O001201000E000D4O0007000B000E00022O001F0005000B3O001201000A00023O0004143O00FC2O010004143O001600010004143O002802010004143O000200012O00188O00163O00013O001A3O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F794A3531484B793900083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00293O00293O00293O00293O00293O00293O00293O002A3O00223O00028O0003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030E3O0046696E6446697273744368696C6403043O0048656164026O00F03F027O0040030A3O0041726368697661626C652O0103053O00436C6F6E65026O000840030C3O0052657175697265734E65636B010003063O00506172656E740003043O0077616974026O00104003073O0044657374726F79026O00144003093O00776F726B7370616365026O00184003163O0046696E6446697273744368696C64576869636849734103083O0048756D616E6F696403183O0047657450726F70657274794368616E6765645369676E616C03063O004865616C746803073O00436F2O6E656374030D3O0043752O72656E7443616D657261030D3O0043616D6572615375626A65637403073O00416E696D61746503083O0044697361626C6564029A5O99B93F00B33O0012013O00014O0013000100013O00261B3O0002000100010004143O0002000100121E000200023O002017000200020003001201000400044O0007000200040002002006000100020005002006000200010006002017000200020007001201000400084O0007000200040002000611000200B200013O0004143O00B20001001201000200014O0013000300073O00261B00020015000100090004143O001500012O0013000500063O0012010002000A3O00261B000200A90001000A0004143O00A900012O0013000700073O00261B00030020000100010004143O002000010020060004000100060030040004000B000C00201700080004000D2O000B0008000200022O001F000500083O001201000300093O00261B000300300001000E0004143O00300001001201000800013O00261B00080028000100010004143O002800010030040007000F0010003004000600110012001201000800093O00261B00080023000100090004143O0023000100121E000900133O001201000A000A4O0005000900020001001201000300143O0004143O003000010004143O0023000100261B00030041000100140004143O00410001001201000800013O00261B00080039000100010004143O0039000100100A0001000600040020170009000500152O0005000900020001001201000800093O00261B00080033000100090004143O0033000100121E000900133O001201000A00094O0005000900020001001201000300163O0004143O004100010004143O0033000100261B00030052000100090004143O00520001001201000800013O00261B0008004B000100090004143O004B000100121E000900133O001201000A000A4O00050009000200010012010003000A3O0004143O0052000100261B00080044000100010004143O0044000100121E000900173O00100A00050011000900100A000100060005001201000800093O0004143O0044000100261B0003005B000100180004143O005B0001002006000800010006002017000800080007001201000A00084O00070008000A00020020170008000800152O00050008000200010004143O00AF0001000E1A000A006E000100030004143O006E0001001201000800013O00261B00080068000100010004143O00680001002017000900040019001201000B001A4O00070009000B00022O001F000600093O00201700090006000D2O000B0009000200022O001F000700093O001201000800093O00261B0008005E000100090004143O005E000100100A0007001100040012010003000E3O0004143O006E00010004143O005E000100261B00030018000100160004143O00180001001201000800013O00261B00080080000100010004143O0080000100201700090007001B001201000B001C4O00070009000B000200201700090009001D00061D000B3O000100032O001F3O00074O001F3O00064O001F3O00014O00090009000B000100121E000900173O00200600090009001E00100A0009001F0004001201000800093O00261B00080071000100090004143O00710001002017000900040007001201000B00204O00070009000B0002000611000900A400013O0004143O00A40001001201000900014O0013000A000A3O00261B00090089000100010004143O00890001001201000A00013O00261B000A0091000100090004143O00910001002006000B00040020003004000B002100100004143O00A40001000E1A0001008C0001000A0004143O008C0001001201000B00013O00261B000B009C000100010004143O009C0001002006000C00040020003004000C0021000C00121E000C00133O001201000D00224O0005000C00020001001201000B00093O00261B000B0094000100090004143O00940001001201000A00093O0004143O008C00010004143O009400010004143O008C00010004143O00A400010004143O00890001001201000300183O0004143O001800010004143O007100010004143O001800010004143O00AF000100261B00020011000100010004143O00110001001201000300014O0013000400043O001201000200093O0004143O001100012O001800025O0004143O00B200010004143O000200012O00163O00013O00013O00073O0003063O004865616C7468028O00026O00F03F03073O0044657374726F7903063O00506172656E7403093O0043686172616374657203043O007761697400254O000E7O0020065O000100264O0024000100020004143O002400010012013O00024O0013000100013O00261B3O0006000100020004143O00060001001201000100023O00261B0001000F000100030004143O000F00012O000E000200013O0020170002000200042O00050002000200010004143O0024000100261B00010009000100020004143O00090001001201000200023O00261B0002001C000100020004143O001C00012O000E000300014O000E000400023O00200600040004000600100A00030005000400121E000300073O001201000400034O0005000300020001001201000200033O00261B00020012000100030004143O00120001001201000100033O0004143O000900010004143O001200010004143O000900010004143O002400010004143O000600012O00163O00017O00253O00913O00913O00913O00913O00923O00933O00953O00953O00963O00983O00983O00993O00993O00993O009A3O009C3O009C3O009D3O009F3O009F3O00A03O00A03O00A03O00A03O00A13O00A13O00A13O00A23O00A43O00A43O00A53O00A63O00A73O00A93O00AB3O00AC3O00AF3O00B33O00313O00323O00343O00343O00353O00353O00353O00353O00353O00363O00363O00363O00363O00363O00363O00373O00383O003E3O003E3O003F3O00413O00433O00433O00443O00463O00463O00473O00483O00493O00493O00493O004A3O004C3O004C3O004D3O004F3O004F3O00503O00513O00523O00543O00543O00553O00553O00553O00563O00573O00583O005B3O005B3O005C3O005E3O005E3O005F3O00603O00603O00613O00633O00633O00643O00643O00643O00653O00663O00673O006A3O006A3O006B3O006D3O006D3O006E3O006E3O006E3O006F3O00703O00723O00723O00733O00733O00743O00753O00763O00793O00793O007A3O007A3O007A3O007A3O007A3O007A3O007B3O007D3O007D3O007E3O00803O00803O00813O00813O00813O00813O00823O00823O00823O00833O00853O00853O00863O00873O00883O00893O008C3O008C3O008D3O008F3O008F3O00903O00903O00903O00903O00AF3O00AF3O00AF3O00AF3O00903O00B03O00B03O00B03O00B13O00B33O00B33O00B43O00B43O00B43O00B43O00B43O00B53O00B63O00B83O00B83O00B93O00BB3O00BB3O00BC3O00BC3O00BD3O00BF3O00BF3O00C03O00C23O00C23O00C33O00C33O00C43O00C43O00C43O00C53O00C73O00C73O00C83O00C93O00CA3O00CC3O00CE3O00CF3O00D23O00D33O00D43O00D63O00D83O00DA3O00DA3O00DB3O00DC3O00DD3O00DE3O00DF3O00E13O00E23O00E43O00043O00030A3O006C6F6164737472696E6703043O0067616D65030C3O00482O74704765744173796E6303213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F587278705331767000083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00E93O00E93O00E93O00E93O00E93O00E93O00E93O00EA3O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574035F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F526F626C6F784861636B657250726F4C75615374752O662F6176617461722D656469746F722D7468696E672F6D61696E2F686561646C652O732E6C756100083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00F53O00F53O00F53O00F53O00F53O00F53O00F53O00F63O00043O00030A3O006C6F6164737472696E6703043O0067616D65030C3O00482O74704765744173796E63033F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4769372O33312F736372697074732F6D61696E2F456D6F74652E6C756100083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00FC3O00FC3O00FC3O00FC3O00FC3O00FC3O00FC3O00FD3O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574033C3O00682O7470733A2O2F6769746C61622E636F6D2F5473756E696F782F6C75612D7374752O662F2D2F7261772F6D61737465722F5231354755492E6C756100083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00FF3O00FF3O00FF3O00FF3O00FF3O00FF3O00FF4O00012O00073O0003043O0067616D65030A3O0047657453657276696365030F3O0054656C65706F72745365727669636503083O0054656C65706F727403073O00506C616365496403073O00506C6179657273030B3O004C6F63616C506C61796572000E3O00121E3O00013O0020175O0002001201000200034O00073O000200020020175O000400121E000200013O00200600020002000500121E000300013O002017000300030002001201000500064O00070003000500020020060003000300072O00093O000300012O00163O00017O000E3O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0005012O0006012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403443O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4564676549592F696E66696E6974657969656C642F6D61737465722F736F7572636500083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O0008012O0008012O0008012O0008012O0008012O0008012O0008012O0009012O00023O0003053O007072696E7403073O00436C69636B656400043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O001F012O001F012O001F012O0020012O00023O0003053O007072696E7403073O00436C69636B656400043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O0022012O0022012O0022012O0023012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403523O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F53702O6F6B7949736E7441536B69642F53702O6F6B79732D536372697074732F6D61696E2F465053253230422O6F737400093O00121E3O00013O00121E000100023O002017000100010003001201000300044O0008000400014O0010000100044O000D5O00022O001C3O000100012O00163O00017O00093O0032012O0032012O0032012O0032012O0032012O0032012O0032012O0032012O0033012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F444D386B4E374C7700083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O003A012O003A012O003A012O003A012O003A012O003A012O003A012O003B012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574033E3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4E4F543447494F2F41696D6C6F636B2D76322F6D61696E2F6C6F636B00083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O0040012O0040012O0040012O0040012O0040012O0040012O0040012O0041012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O7470476574034F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4E4F543447494F2F41696D4C6F636B2D5363726970742F6D61696E2F41696D253230566965776572253230763200083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O0043012O0043012O0043012O0043012O0043012O0043012O0043012O0044012O00113O00028O00030C3O00736574636C6970626F617264032C3O00682O7470733A2O2F646973636F72642E636F6D2F75736572732F39323330314O3035343733353236313603063O004E6F7469667903053O005469746C6503143O00436F7069656420746F20436C6970426F6172642103073O00436F6E74656E7403013O002003083O004475726174696F6E026O00184003053O00496D616765022O00A0E9AAB3F04103073O00416374696F6E7303063O0049676E6F726503043O004E616D6503053O004F6B61792103083O0043612O6C6261636B00183O0012013O00013O00261B3O0001000100010004143O0001000100121E000100023O001201000200034O00050001000200012O000E00015O0020170001000100042O000F00033O000500300400030005000600300400030007000800300400030009000A0030040003000B000C2O000F00043O00012O000F00053O00020030040005000F0010002O0200065O00100A00050011000600100A0004000E000500100A0003000D00042O00090001000300010004143O001700010004143O000100012O00163O00013O00013O00023O0003053O007072696E7403153O0054686520757365722074612O706564204F6B61792100043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O0054012O0054012O0054012O0055012O00183O004F012O0051012O0051012O0052012O0052012O0052012O0053012O0053012O0053012O0053012O0053012O0053012O0053012O0053012O0053012O0053012O0055012O0055012O0055012O0055012O0053012O0056012O0057012O0059012O00113O00028O00030C3O00736574636C6970626F61726403363O00682O7470733A2O2F3O772E726F626C6F782E636F6D2F67726F7570732F31353430313238312F4472656172792D4F2O66696369616C03063O004E6F7469667903053O005469746C6503143O00436F7069656420746F20436C6970426F6172642103073O00436F6E74656E7403013O002003083O004475726174696F6E026O00184003053O00496D616765022O00A0E9AAB3F04103073O00416374696F6E7303063O0049676E6F726503043O004E616D6503053O004F6B61792103083O0043612O6C6261636B001E3O0012013O00014O0013000100013O00261B3O0002000100010004143O00020001001201000100013O00261B00010005000100010004143O0005000100121E000200023O001201000300034O00050002000200012O000E00025O0020170002000200042O000F00043O000500300400040005000600300400040007000800300400040009000A0030040004000B000C2O000F00053O00012O000F00063O00020030040006000F0010002O0200075O00100A00060011000700100A0005000E000600100A0004000D00052O00090002000400010004143O001D00010004143O000500010004143O001D00010004143O000200012O00163O00013O00013O00023O0003053O007072696E7403153O0054686520757365722074612O706564204F6B61792100043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O0067012O0067012O0067012O0068012O001E3O005E012O005F012O0061012O0061012O0062012O0064012O0064012O0065012O0065012O0065012O0066012O0066012O0066012O0066012O0066012O0066012O0066012O0066012O0066012O0066012O0068012O0068012O0068012O0068012O0066012O0069012O006A012O006C012O006D012O006F012O00113O00028O00030C3O00736574636C6970626F617264032C3O00682O7470733A2O2F646973636F72642E636F6D2F75736572732F352O362O393639303135342O37333730383903063O004E6F7469667903053O005469746C6503143O00436F7069656420746F20436C6970426F6172642103073O00436F6E74656E7403013O002003083O004475726174696F6E026O00184003053O00496D616765022O00A0E9AAB3F04103073O00416374696F6E7303063O0049676E6F726503043O004E616D6503053O004F6B61792103083O0043612O6C6261636B00183O0012013O00013O000E1A0001000100013O0004143O0001000100121E000100023O001201000200034O00050001000200012O000E00015O0020170001000100042O000F00033O000500300400030005000600300400030007000800300400030009000A0030040003000B000C2O000F00043O00012O000F00053O00020030040005000F0010002O0200065O00100A00050011000600100A0004000E000500100A0003000D00042O00090001000300010004143O001700010004143O000100012O00163O00013O00013O00023O0003053O007072696E7403153O0054686520757365722074612O706564204F6B61792100043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O007A012O007A012O007A012O007B012O00183O0075012O0077012O0077012O0078012O0078012O0078012O0079012O0079012O0079012O0079012O0079012O0079012O0079012O0079012O0079012O0079012O007B012O007B012O007B012O007B012O0079012O007C012O007D012O007F012O00113O00028O00030C3O00736574636C6970626F617264031D3O00682O7470733A2O2F646973636F72642E2O672F57652O706B614B36324503063O004E6F7469667903053O005469746C6503143O00436F7069656420746F20436C6970426F6172642103073O00436F6E74656E7403493O004F757220446973636F72642053657276657220496E766974652068617320622O656E2073752O63652O7366752O6C7920636F7069656420746F20796F757220636C6970626F6172642103083O004475726174696F6E026O00184003053O00496D616765022O00A0E9AAB3F04103073O00416374696F6E7303063O0049676E6F726503043O004E616D6503053O004F6B61792103083O0043612O6C6261636B001E3O0012013O00014O0013000100013O00261B3O0002000100010004143O00020001001201000100013O00261B00010005000100010004143O0005000100121E000200023O001201000300034O00050002000200012O000E00025O0020170002000200042O000F00043O000500300400040005000600300400040007000800300400040009000A0030040004000B000C2O000F00053O00012O000F00063O00020030040006000F0010002O0200075O00100A00060011000700100A0005000E000600100A0004000D00052O00090002000400010004143O001D00010004143O000500010004143O001D00010004143O000200012O00163O00013O00013O00023O0003053O007072696E7403153O0054686520757365722074612O706564204F6B61792100043O00121E3O00013O001201000100024O00053O000200012O00163O00017O00043O008A012O008A012O008A012O008B012O001E3O0081012O0082012O0084012O0084012O0085012O0087012O0087012O0088012O0088012O0088012O0089012O0089012O0089012O0089012O0089012O0089012O0089012O0089012O0089012O0089012O008B012O008B012O008B012O008B012O0089012O008C012O008D012O008F012O0090012O0092012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403403O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F626C697A6C6F636B65722F626C697A6C6F636B65722F6D61696E2F466C7900083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00A1012O00A1012O00A1012O00A1012O00A1012O00A1012O00A1012O00A2012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403553O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F53702O6F6B7949736E7441536B69642F53702O6F6B79732D536372697074732F6D61696E2F434672616D6525323053702O656400083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00A4012O00A4012O00A4012O00A4012O00A4012O00A4012O00A4012O00A5012O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030E3O0046696E6446697273744368696C6403083O0048756D616E6F696403093O0057616C6B53702O656401093O00121E000100013O002006000100010002002006000100010003002006000100010004002017000100010005001201000300064O000700010003000200100A000100074O00163O00017O00093O00AA012O00AA012O00AA012O00AA012O00AA012O00AA012O00AA012O00AA012O00AB012O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030E3O0046696E6446697273744368696C6403083O0048756D616E6F696403093O004A756D70506F77657201093O00121E000100013O002006000100010002002006000100010003002006000100010004002017000100010005001201000300064O000700010003000200100A000100074O00163O00017O00093O00AD012O00AD012O00AD012O00AD012O00AD012O00AD012O00AD012O00AD012O00AE012O000E3O0003043O0067616D6503073O00506C6163654964022O003805941A064203053O007072696E7403083O0053752O63652O7321022O00204E89DEF441023O002O20C6E441022O00A8C48D4C0242022O00E0BA2B4D0242030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203043O004B69636B03143O0047616D652049736E742073752O706F727465642E00253O00121E3O00013O0020065O000200261B3O0008000100030004143O0008000100121E3O00043O001201000100054O00053O000200010004143O0024000100121E3O00013O0020065O000200261B3O000D000100060004143O000D00010004143O0024000100121E3O00013O0020065O000200261B3O0012000100070004143O001200010004143O0024000100121E3O00013O0020065O000200261B3O0017000100080004143O001700010004143O0024000100121E3O00013O0020065O000200261B3O001C000100090004143O001C00010004143O0024000100121E3O00013O0020175O000A0012010002000B4O00073O000200020020065O000C0020175O000D0012010002000E4O00093O000200012O00163O00017O00253O00B9012O00B9012O00B9012O00B9012O00BA012O00BA012O00BA012O00BA012O00BB012O00BB012O00BB012O00BB012O00BB012O00BC012O00BC012O00BC012O00BC012O00BC012O00BD012O00BD012O00BD012O00BD012O00BD012O00BE012O00BE012O00BE012O00BE012O00BE012O00C0012O00C0012O00C0012O00C0012O00C0012O00C0012O00C0012O00C0012O00C2012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F4C6631795361316D00083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00DB012O00DB012O00DB012O00DB012O00DB012O00DB012O00DB012O00DC012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F424D6E747A76516800083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00E1012O00E1012O00E1012O00E1012O00E1012O00E1012O00E1012O00E2012O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403533O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F53702O6F6B7949736E7441536B69642F53702O6F6B79732D536372697074732F6D61696E2F547572746C6525323053707900083O00121E3O00013O00121E000100023O002017000100010003001201000300044O0010000100034O000D5O00022O001C3O000100012O00163O00017O00083O00E8012O00E8012O00E8012O00E8012O00E8012O00E8012O00E8012O00E9012O002A022O00023O00033O000D3O000D3O000E3O000F3O00103O00123O00123O00133O00153O00173O00173O00183O001A3O001C3O001C3O001D3O001F3O00213O00213O00223O00243O00243O00253O00273O00273O00283O00283O00283O002A3O002A3O00283O002A3O002B3O002B3O002B3O002B3O002B3O002C3O002E3O002E3O002F3O002F3O002F3O002F3O00303O00303O00303O00E43O00E43O00303O00E43O00E53O00E73O00E73O00E83O00E83O00E83O00EA3O00EA3O00E83O00EA3O00EB3O00EC3O00ED3O00F03O00F03O00F13O00F33O00F33O00F43O00F43O00F43O00F63O00F63O00F43O00F63O00F73O00F83O00FA3O00FA3O00FB3O00FB3O00FB3O00FD3O00FD3O00FB3O00FD3O00FE3O00FE3O00FE4O00013O00012O00FE4O00012O002O012O0003012O0003012O0004012O0004012O0004012O0006012O0006012O0004012O0006012O0007012O0007012O0007012O0009012O0009012O0007012O0009012O000A012O000B012O000E012O000E012O000F012O000F012O000F012O000F012O000F012O0010012O0010012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0011012O0012012O0012012O0013012O0015012O0015012O0016012O0018012O0018012O0019012O0019012O0019012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001A012O001B012O001D012O001D012O001E012O001E012O001E012O001E012O001E012O001E012O001E012O001E012O001E012O0020012O0020012O0020012O0020012O001E012O0021012O0021012O0021012O0021012O0021012O0021012O0021012O0021012O0021012O0023012O0023012O0023012O0023012O0021012O0024012O0026012O0026012O0027012O0027012O0027012O0027012O0027012O0028012O0029012O002A012O002D012O002D012O002E012O0030012O0030012O0031012O0031012O0031012O0033012O0033012O0031012O0033012O0034012O0035012O0037012O0037012O0038012O0038012O0038012O0038012O0039012O0039012O0039012O003B012O003B012O0039012O003B012O003C012O003E012O003E012O003F012O003F012O003F012O0041012O0041012O003F012O0041012O0042012O0042012O0042012O0044012O0044012O0042012O0044012O0045012O0046012O0049012O0049012O004A012O004C012O004C012O004D012O004D012O004D012O004D012O004E012O004E012O004E012O0059012O0059012O0059012O004E012O0059012O005A012O005C012O005C012O005D012O005D012O005D012O006F012O006F012O006F012O005D012O006F012O0070012O0071012O0073012O0073012O0074012O0074012O0074012O007F012O007F012O007F012O0074012O007F012O0080012O0080012O0080012O0092012O0092012O0092012O0080012O0092012O0093012O0094012O0097012O0097012O0098012O009A012O009A012O009B012O009B012O009B012O009B012O009B012O009C012O009D012O009F012O009F012O00A0012O00A0012O00A0012O00A2012O00A2012O00A0012O00A2012O00A3012O00A3012O00A3012O00A5012O00A5012O00A3012O00A5012O00A6012O00A8012O00A8012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00A9012O00AB012O00AB012O00A9012O00AB012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AC012O00AE012O00AE012O00AC012O00AE012O00AF012O00B0012O00B3012O00B3012O00B4012O00B6012O00B6012O00B7012O00B7012O00B7012O00B7012O00B7012O00B7012O00B7012O00B7012O00C2012O00C2012O00C3012O00C5012O00C5012O00C6012O00C6012O00C6012O00C6012O00C6012O00C6012O00C6012O00C6012O00C7012O00C8012O00CA012O00CA012O00CB012O00CB012O00CB012O00CB012O00CB012O00CB012O00CB012O00CB012O00CB012O00CB012O00CC012O00CC012O00CC012O00CE012O00CE012O00CE012O00CE012O00CE012O00CE012O00CE012O00CE012O00D0012O00D0012O00D0012O00D1012O00D2012O00D5012O00D5012O00D6012O00D8012O00D8012O00D9012O00D9012O00D9012O00D9012O00DA012O00DA012O00DA012O00DC012O00DC012O00DA012O00DC012O00DD012O00DF012O00DF012O00E0012O00E0012O00E0012O00E2012O00E2012O00E0012O00E2012O00E3012O00E4012O00E6012O00E6012O00E7012O00E7012O00E7012O00E9012O00E9012O00E7012O00E9012O00EA012O00EA012O00EA012O00EA012O00EA012O00EB012O00EC012O00EE012O00F0012O00F1012O00F2012O00F3012O00",v9(),...);break;end end end
