--[[

‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïî‚ïù‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñë‚ñë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ÄÉ‚ÄÉ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ÄÉ‚ÄÉ‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

\_This Lua Script was made by (Alpha 0.1.8) _/
‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÄ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà
‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñë‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñë‚ñà‚ñë‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ

Programed by 4kgw#4444 
https://discord.gg/WeppkaK62E
v1.8.9

          This script has been licensed using Dreary Official
      Unauthorized distribution of this script is forbidden.
Any attempts at tampering, reverse engineering or modifying this script
            internal logic will result in a global ban.
            
            STOP TRYING TO STEAL THE SOURCE CODE NIGGER BOY
            IF YOU WANNA LEARN SHIT DM ME BRO üíÄüíÄüíÄ‚ò†Ô∏è
      
           
 --]]
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then vv9(),...);break;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v15=function(v23,v24,...)local v25=0;local v26;local v27;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;while true do if (v25==7) then v37=function(v38,v39,v40)local v46=0;local v47;local v48;local v49;while true do if (v46==0) then v47=v38[1];v48=v38[2];v46=1;end if (v46==1) then v49=v38[3];return function(...)local v85=1;local v86= -1;local v87={...};local v88=v12("#",...) -1;local function v89()local v95=v47;local v96=v48;local v97=v49;local v98=v35;local v99={};local v100={};local v101={};for v106=0,v88 do if ((v106>=v97) or ((4637 -(384 + 1008))<=2296)) then v99[v106-v97]=v87[v106 + 1 + 0];else v101[v106]=v87[v106 + 1];end end local v102=(v88-v97) + 1;local v103;local v104;while true do local v107=0;local v108;while true do if (((3482 -(1763 + 155))==(2943 -(398 + 981))) and (v107==0)) then v108=(348 + 342) -(373 + 317);while true do if (((2157 -(379 + 259))<(2111 -(419 + 135))) and (v108==(1 + 0))) then if ((v104<=(13 + 7)) or ((1206 -(258 + 188))>(1346 + 1648))) then if ((v104<=(921 -(387 + (1496 -(589 + 382))))) or (3706<(8032 -5333))) then if (((13628 -10866)<(5603 -2151)) and (v104<=(902 -(442 + 456)))) then if (((1522 -(788 + 584))>(14 + 97)) and (v104<=1)) then if ((v104==(0 -0)) or ((564 + 2777)>=4009)) then v101[v103[2 + 0]]=v103[1 + 2];else local v141=0 + 0;local v142;local v143;while true do if ((v141==(2 -1)) or (3938==((4179 -(18 + 17)) -(294 + 151)))) then while true do if ((v142==(206 -(162 + 44))) or (3178<=105)) then v143=v101[v103[894 -(778 + 112)]];if ((1380>=(911 -(57 + 59))) and  not v143) then v85=v85 + 1 + 0;else local v312=242 -(162 + 80);local v313;while true do if (((154 + 220)<(8059 -5012)) and (v312==(0 -(176 -(111 + 65))))) then v313=1090 -((1884 -(392 + 1073)) + 671);while true do if (((1476 -(321 + 1155))==v313) or ((12214 -7552)<(5216 -4072))) then v101[v103[2 + 0 + (0 -0)]]=v143;v85=v103[3];break;end end break;end end end break;end end break;end if ((((614 -(261 + 353)) -(0 + 0))==v141) or ((16474 -12010)<=(298 + 204))) then v142=0 + 0;v143=nil;v141=(467 + 898) -(23 + 17 + 1324);end end end elseif ((1297<(7555 -(108 + 4552))) and (v104<=(4 -2))) then local v144=0 + 0;local v145;local v146;while true do if (((14588 -10060)>(1141 + 129)) and (v144==(1 + 0))) then for v256=(1993 -(179 + 118)) -((3284 -(174 + 1566)) + (340 -189)), #v100 do local v257=0;local v258;local v259;while true do if ((v257==1) or ((244 + 1891)<(1109 + 493))) then while true do if (((2097 -(18 + 1652))==427) and (v258==(0 + 0))) then v259=v100[v256];for v354=313 -(114 + 199), #v259 do local v355=0 -0;local v356;local v357;local v358;local v359;while true do if ((v355==2) or ((8366 -6045)>=(7290 -2431))) then while true do if (((50 + 65)==115) and (v356==0)) then local v401=0;while true do if (((1030 + 983)>=(445 -(24 + (467 -288)))) and ((0 + 0)==v401)) then v357=v259[v354];v358=v357[4 -3];v401=1 + 0;end if ((v401==1) or ((13433 -(9993 -(235 + 594)))<=(2468 -1699))) then v356=388 -(194 + 193);break;end end end if ((v356==(1 + 0)) or (3127>3472)) then v359=v357[2 + 0];if (((v358==v101) and (v359>=v145)) or (((6062 -(973 + 707)) -(1103 + 255))==(1412 -((272 -(68 + 76)) + 54)))) then local v408=1200 -(421 + 779);local v409;while true do if (((0 + 0)==v408) or (1655>=(4363 -(590 + (3378 -2172))))) then v409=0 + 0;while true do if (((0 -0)==v409) or ((3087 -(609 + 1669))>(8801 -6174))) then v146[v359]=v358[v359];v357[3 -2]=v146;break;end end break;end end end break;end end break;end if (((128 -(22 + 105))==v355) or ((280 + 102)>(961 + 1072))) then v358=nil;v359=nil;v355=2;end if ((v355==(0 + 0)) or ((3568 -2517)>=(2068 + 40))) then v356=1387 -(969 + 418);v357=nil;v355=805 -(337 + 467);end end end break;end end break;end if (((2474 -(1286 + 385))>(39 + 369)) and (v257==(0 -0))) then v258=0 + (1622 -(1235 + 387));v259=nil;v257=1;end end end break;end if ((v144==0) or ((2111 + 810)>3083)) then v145=v103[2 -0];v146={};v144=(2981 -(515 + 823)) -(175 + 1467);end end elseif ((v104>((8 -5) + 0)) or (489>=((401 + 2199) -((172 -86) + 554)))) then local v190=0 + 0;local v191;local v192;local v193;local v194;while true do if ((v190==(259 -(222 + 35))) or ((1093 -362)>(7522 -(5577 -(360 + 262))))) then while true do if (((13360 -10007)<(5030 -1440)) and ((0 -0)==v191)) then local v314=0 + 0;while true do if ((v314==(2 -(1 + 0))) or ((2444 -(384 + 9))==(4597 -3184))) then v191=1 -(1042 -(568 + 474));break;end if (((8506 -4661)<4003) and ((0 -(0 + 0))==v314)) then v192=v103[3 -1];v193=v101[v192];v314=1 + 0;end end end if ((v191==(2 -1)) or (2480==3497)) then v194=v103[3];for v332=1 + 0 + 0,v194 do v193[v332]=v101[v192 + v332];end break;end end break;end if (((20 + 803 + 350)==(3157 -((1325 -(266 + 288)) + 1213))) and ((3 -(4 -2))==v190)) then v193=nil;v194=nil;v190=9 -7;end if ((v190==(0 -0)) or ((1727 + 179)==(9224 -4399))) then v191=0 + 0;v192=nil;v190=1580 -(646 + 933);end end else do return;end end elseif ((v104<=((6381 -4498) -(651 + 1226))) or ((1394 -((148 -45) + 361))>(5308 -(800 + (1322 -583))))) then if (((1825 + 248)<((6204 -3452) -(84 + 138))) and (v104>(17 -(293 -(113 + 168))))) then local v147=0 + 0;local v148;local v149;local v150;local v151;local v152;while true do if ((v147==(1 + 0)) or ((46 + 1036)>(366 + 2534))) then v150=nil;v151=nil;v147=2;end if (((255 + 4088)>80) and (v147==0)) then v148=0;v149=nil;v147=1;end if ((1688>(14 + (181 -88))) and (v147==(2 -0))) then v152=nil;while true do if (((6804 -3784)>=(2970 -896)) and (v148==(0 -0))) then v149=v103[7 -5];v150,v151=v98(v101[v149](v13(v101,v149 + 1,v103[(1023 + 883) -(1476 + 427)])));v148=1 + 0;end if (((1356 + (5477 -2464))>=2458) and (v148==(1 + 1))) then for v309=v149,v86 do local v310=0;while true do if ((v310==(0 + 0)) or (3033<(4218 -2404))) then v152=v152 + (755 -(532 + 222));v101[v309]=v150[v152];break;end end end break;end if ((v148==(3 -2)) or (((595 + 1195) -(514 + 866))>4715)) then local v291=0 -0;while true do if (((4099 -(1861 + 26))==(1974 + 238)) and ((0 + 0)==v291)) then v86=(v151 + v149) -((410 + 441) -(285 + 565));v152=1917 -(1427 + 490);v291=394 -(280 + 113);end if (((342 + 87)<=(3397 -1351)) and (v291==(1 + 0))) then v148=521 -((421 -210) + 308);break;end end end end break;end end elseif (v101[v103[1 + 1]] or (2402<((1173 -(489 + 489)) + 950))) then v85=v85 + 1 + 0;else v85=v103[12 -(11 -2)];end elseif (((2017 -(1557 + 56))<(7581 -2660)) and (v104<=(2 + 5))) then local v153=0 + 0;local v154;local v155;while true do if (((5311 -(775 + 592))>=(149 + 363 + 362)) and (v153==(0 + 0))) then v154=1555 -(110 + 1445);v155=nil;v153=1;end if ((v153==(1 + 0)) or ((5425 -2922)>=4706)) then while true do if (((5040 -(267 + 471))>(2805 -(760 + 263))) and (v154==0)) then v155=v103[1622 -(1254 + 366)];v101[v155](v101[v155 + (539 -(22 + 516))]);break;end end break;end end elseif ((v104>(13 -(5 + 0))) or ((245 + 62)>=(4175 -(799 + 124)))) then v101[v103[2 + 0]]();else local v196=0;local v197;local v198;while true do if (((5638 -((2164 -(1280 + 458)) + 1125))>=(7442 -5613)) and (v196==(573 -(339 + 234)))) then v197=321 -(209 + 112);v198=nil;v196=3 -2;end if ((1924==(4409 -2485)) and (v196==((1788 -(1559 + 228)) + 0))) then while true do if (((5295 -(291 + 222))>=(3778 -(2275 -(236 + 430)))) and (v197==(0 + 0))) then v198=v103[159 -((236 -110) + 31)];v101[v198](v13(v101,v198 + (2 -1) + 0,v86));break;end end break;end end end elseif ((4232>(1464 + 1491)) and (v104<=((424 -(359 + 16)) -(471 -(362 + 74))))) then if (((6038 -(740 + 598))>=(4527 -2909)) and (v104<=(1 + 10))) then if ((v104==(588 -(523 + 55))) or ((9597 -6251)<=2218)) then local v156=0;local v157;local v158;local v159;local v160;local v161;local v162;while true do if ((v156==(2 + (1 -0))) or (918<(2602 -(585 + 1381)))) then while true do if ((836>=(698 -(154 + 47 + 18))) and ((1 + 1)==v157)) then v162=nil;while true do if ((v158==(1216 -(94 + 1121))) or ((8533 -4188)==(7698 -(5251 -(107 + 57))))) then local v335=0 -0;while true do if ((v335==((1975 -(1129 + 846)) + 0)) or (243>(1182 + 3030 + 310))) then local v369=0 -0;while true do if ((((1028 -(39 + 18)) + 1528)>(3882 -(1454 + 216 + 202))) and (v369==1)) then v335=1;break;end if ((3891<=(5459 -(74 + 460))) and (v369==(1292 -(309 + 983)))) then v86=(v161 + v159) -(1 + (1035 -(60 + 975)));v162=0;v369=2 -1;end end end if ((777<=(1182 + 1112)) and (v335==1)) then v158=1 + 1;break;end end end if ((v158==(0 -0)) or (((1620 + 312) -(1267 + 409))>=(3014 -1552))) then local v336=1901 -(474 + 1427);while true do if (((0 + 0)==v336) or ((8037 -5301)<2622)) then local v370=0 + (1978 -(1504 + 474));while true do if ((v370==(0 + 0)) or (1380>3159)) then v159=v103[1145 -(721 + 422)];v160,v161=v98(v101[v159](v101[v159 + (753 -(714 + 38))]));v370=2 -1;end if (((303 + 528 + 640)>=((4382 -(285 + 16)) -2813)) and (v370==1)) then v336=(551 + 199) -(31 + 641 + 77);break;end end end if (((228 -120)<=4136) and (v336==(1068 -(765 + 302)))) then v158=1 + 0;break;end end end if (((1819 + 2478)>=3882) and (v158==(75 -((1200 -(463 + 732)) + 68)))) then for v347=v159,v86 do local v348=0 + 0;local v349;while true do if (((1857 + 758)<=4819) and (v348==(0 -0))) then v349=0 + 0 + (0 -0);while true do if ((3265>=(5255 -3795)) and (v349==0)) then v162=v162 + ((3 + 1) -3);v101[v347]=v160[v162];break;end end break;end end end break;end end break;end if (((1664 + 381)>=(79 + 188)) and (v157==(1 -0))) then v160=nil;v161=nil;v157=1 + 1;end if ((v157==0) or ((2792 + 1321)<=(3525 -(153 + 610)))) then local v293=90 -(68 + (1816 -(952 + 842)));while true do if ((2783<(5971 -(1487 + 407))) and (v293==0)) then v158=0 + 0;v159=nil;v293=1664 -(1015 + 648);end if ((v293==(1 -0)) or (3396>(2481 + 2215))) then v157=1;break;end end end end break;end if ((v156==(0 + 0)) or (((534 -241) + 373)>=(4106 -(1143 + 92)))) then v157=0 -0;v158=nil;v156=1 + 0;end if (((2 -0)==v156) or ((1301 -((792 -498) + 252))>=((3031 -1064) -(235 + 425)))) then v161=nil;v162=nil;v156=1173 -(524 + 36 + 610);end if ((v156==1) or (2753<=1517)) then v159=nil;v160=nil;v156=927 -((1238 -(326 + 1)) + 14);end end else local v163=0 -(0 + 0);local v164;while true do if (((655 + 3375)>=(3693 + 142)) and (v163==((1233 + 663) -(909 + 249 + 738)))) then v164=v103[1 + 1];v101[v164]=v101[v164](v101[v164 + 1 + 0]);break;end end end elseif (((5671 -(269 + 1105))<(3915 + 582)) and (v104<=(9 + 3))) then if (((2528 -(8 + 1323))<=(17683 -(14429 -(1175 + 368)))) and (v101[v103[2]]==v101[v103[(57 -42) -11]])) then v85=v85 + 1 + 0;else v85=v103[1 + 2];end elseif ((v104>(1268 -(1122 + 133))) or ((3770 -(12 + 439))<(895 -320))) then local v200=0 -0;local v201;local v202;local v203;while true do if (((1636 -(758 + 878))==v200) or (2433==(5668 -2959))) then v201=0 -0;v202=nil;v200=1;end if ((2720<=4968) and (v200==(283 -(263 + 19)))) then v203=nil;while true do if ((v201==((322 -(275 + 44)) -2)) or ((6938 -1998)<(5298 -(1395 + 594)))) then for v337=v202 + (1 -0),v103[(10 -7) + 1] do v203=v203   .. v101[v337];end v101[v103[7 -5]]=v203;break;end if ((v201==((1481 -(866 + 615)) + 0)) or ((1487 -837)>=(900 + (2870 -1518)))) then local v318=0 -0;while true do if ((v318==(0 -0)) or ((5640 -2545)==((3378 -(74 + 318)) -(405 + 830)))) then v202=v103[1803 -(1358 + 442)];v203=v101[v202];v318=3 -(1 + 1);end if ((v318==(1 + 0)) or ((9691 -4932)<=(289 + 178))) then v201=515 -(43 + 471);break;end end end end break;end end else v101[v103[8 -6]]={};end elseif ((v104<=(46 -29)) or (1647>((14040 -(334 + 607)) -10344))) then if (((2642 -(5889 -4651))>=(1608 -(137 + 596))) and (v104<=((1440 + 510) -(1379 + 556)))) then if ((((7114 -4010) -(162 + 1211))>=(6267 -4644)) and  not v101[v103[2]]) then v85=v85 + 1 + 0;else v85=v103[1 + 2];end elseif ((v104>16) or (((5127 -1593) + 530)<(3101 -(375 + 186)))) then local v206=0 + 0;local v207;local v208;local v209;while true do if ((v206==(0 + 0)) or ((679 + (8568 -4677))<(2727 -(1063 + 431)))) then v207=(464 + 1221) -(172 + 1513);v208=nil;v206=1 -0;end if (((1361 + 2149)>(1633 + (3061 -(60 + 1723)))) and (v206==(1412 -(687 + 446 + 278)))) then v209=nil;while true do if (((0 + 0)==v207) or (((4720 + 7176) -8542)<=(4594 -(1381 + 78)))) then local v319=0;while true do if ((v319==(69 -(55 + 14))) or ((4954 -(188 + 796))>=(11988 -7856))) then v208=0 -0;v209=nil;v319=1 -0;end if ((v319==1) or ((3326 + 1456)<(7304 -3237))) then v207=1;break;end end end if ((v207==1) or (4086<=747)) then while true do if ((v208==(0 -0)) or ((1710 + 288)==(4530 -(574 + 546)))) then v209=v103[5 -3];v101[v209]=v101[v209](v13(v101,v209 + (154 -(139 + 14)),v86));break;end end break;end end break;end end else local v210=0 -(0 + 0);local v211;local v212;while true do if (((5629 -(739 + 111))==4779) and (v210==(0 -0))) then v211=0 + 0 + 0;v212=nil;v210=1;end if (((707 -(620 + 86))==v210) or (4913<(5263 -(627 + 835)))) then while true do if ((v211==(0 + 0)) or ((746 + 258)>4933)) then v212=v103[5 -(3 + 0)];v101[v212]=v101[v212]();break;end end break;end end end elseif ((v104<=(867 -(373 + 476))) or ((3220 -1925)>=(4344 -761))) then v101[v103[1334 -(211 + 149 + 972)]]=v39[v103[(247 -184) -(22 + (397 -(36 + 323)))]];elseif (((6800 -3166)>=1952) and (v104==(1693 -(1510 + 164)))) then local v213=0 + 0;local v214;local v215;while true do if (((5105 -(289 + 153))>(71 + 582)) and (v213==(659 -(125 + 533)))) then while true do if ((v214==(328 -(110 + (1250 -(212 + 820))))) or ((826 + 490)>=(6454 -(4021 -(302 + 612))))) then v215=v103[2];v101[v215](v13(v101,v215 + (1340 -(867 + 472)),v103[(19 -12) -4]));break;end end break;end if (((1763 -(621 + 713))<=(462 + 741)) and (v213==(0 -0))) then v214=0 + 0;v215=nil;v213=1 + 0;end end else v101[v103[7 -5]]=v37(v96[v103[1760 -(180 + 1577)]],nil,v40);end elseif (((3601 -((141 -96) + 29))<(3398 + 776)) and (v104<=(1107 -(635 + 442)))) then if ((v104<=(13 + 12)) or ((2239 + 2681)<(2180 + 1816))) then if ((v104<=22) or ((1930 + 1735)<=(2511 -(1034 + 269)))) then if ((v104==((13 + 49) -(310 -(50 + 219)))) or ((4994 -(955 + 2198))>((8251 -(86 + 95)) -3275))) then local v167=0;local v168;local v169;local v170;while true do if ((v167==(0 -0)) or (((1713 + 5092) -3972)==(9644 -6829))) then v168=0 + 0;v169=nil;v167=1 -0;end if ((v167==(1 + 0)) or ((12 + 2521)<=(225 + 240))) then v170=nil;while true do if ((998>426) and (v168==(258 -(51 + 56 + 151)))) then local v294=0 + 0;local v295;while true do if (((22743 -18157)>=4158) and (v294==(319 -(289 + 30)))) then v295=0 -0;while true do if (((5742 -(670 + 1249))==3823) and (v295==(0 -0))) then v169=v103[2];v170=v101[v169];v295=1;end if (((2387 + (3336 -2116))==(5538 -1931)) and ((1 + 0)==v295)) then v168=1 -0;break;end end break;end end end if ((v168==(1856 -((6732 -5265) + 388))) or ((8763 -4039)<(4752 -(19 + 334)))) then for v311=v169 + (1484 -(1372 + 111)),v103[3 + (0 -0)] do v8(v170,v101[v311]);end break;end end break;end end elseif ((v101[v103[2 + 0]]==v103[244 -(43 + 197)]) or ((313 + 372)>(7157 -4639))) then v85=v85 + (604 -(476 + 127));else v85=v103[3];end elseif ((4247>=((15879 -10377) -(1991 + 500))) and (v104<=(1295 -(1090 + 182)))) then local v171=1883 -(778 + 1105);local v172;local v173;local v174;while true do if ((v171==1) or ((4259 -(235 + 14))<=1385)) then v174={};v173=v10({},{__index=function(v260,v261)local v275=0;local v276;local v277;local v278;while true do if ((v275==(0 -0)) or ((3794 -(85 + 1215))<(1696 -(156 + 725)))) then v276=0 -0;v277=nil;v275=1217 -(550 + 666);end if (((1 + (0 -0))==v275) or (1293==(439 + 620))) then v278=nil;while true do if ((v276==(1497 -(689 + 807))) or ((10939 -7048)<=3573)) then while true do if ((v277==(0 -0)) or (((79 + 484) -289)>(4449 -2326))) then local v382=0 -0;local v383;while true do if ((4088>=(1155 -(40 + 516))) and (0==v382)) then v383=(0 + 0) -0;while true do if ((2883>=(1536 -928)) and (v383==(0 -0))) then v278=v174[v261];return v278[2 -(1 + 0)][v278[2 -0]];end end break;end end end end break;end if ((v276==(145 -((1177 -(124 + 1019)) + 111))) or ((1209 + 2515)<=(997 + 2316))) then local v366=0 + 0;while true do if ((v366==(0 -0)) or ((3575 -1688)>2337)) then v277=987 -(615 + (663 -291));v278=nil;v366=1079 -(723 + 355);end if (((3058 + 525)<=(3602 + 1046)) and (v366==((5846 -4384) -(394 + 1067)))) then v276=1 + 0;break;end end end end break;end end end,__newindex=function(v262,v263,v264)local v279=246 -(222 + 24);local v280;local v281;local v282;while true do if (((1 -0)==v279) or ((1963 -(963 + 926))==(2815 + (4496 -2819)))) then v282=nil;while true do if ((v280==(0 + (1288 -(1128 + 160)))) or ((4792 -(1743 + 113))<((5337 -(960 + 807)) -(1026 + (611 -358))))) then v281=0;v282=nil;v280=1;end if ((v280==(118 -(95 + 22))) or (1404<=(344 + 142))) then while true do if ((v281==(0 + 0)) or ((5392 -((1587 -317) + 550))>3978)) then v282=v174[v263];v282[1731 -(1643 + 87)][v282[110 -(104 + 4)]]=v264;break;end end break;end end break;end if ((v279==(0 -0)) or ((2154 + 417)>=(12169 -(10067 -(628 + 633))))) then v280=0;v281=nil;v279=1 + 0;end end end});v171=1 + 1;end if (((4195 -(803 + 1150))>=(137 + 938)) and (v171==2)) then for v265=1725 -(658 + (2652 -(1120 + 466))),v103[339 -(152 + 183)] do local v266=717 -(692 + 25);local v267;local v268;local v269;while true do if ((((7395 -(730 + 1078)) -(521 + 379 + 930))>1405) and (v266==(0 -0))) then v267=0;v268=nil;v266=1 + 0;end if ((3822>((9494 -7034) -(539 + 298))) and (v266==1)) then v269=nil;while true do if ((v267==(0 + 0)) or ((20 + 9)>(4359 -(389 + 341)))) then local v350=0 -0;while true do if (((582 -(92 + 489))==v350) or ((3631 -(97 + (266 -141)))<=(586 -(91 + (336 -183))))) then v267=1;break;end if ((v350==(0 + 0)) or ((5959 -(916 + 1081))<=((24868 -18058) -(2053 + 1422)))) then v268=0 -0;v269=nil;v350=1 + 0;end end end if (((8406 -4626)>=(11501 -7957)) and (v267==1)) then while true do if ((v268==(0 + 0)) or ((2869 -(346 + 179))==(150 + 2836))) then local v376=(3317 -(68 + 1605)) -(286 + 49 + (4770 -3461));while true do if (((813 + 1331)==2144) and (v376==(2 -1))) then v268=1 + 0;break;end if (((5260 -(44 + 764))>(1024 + 218)) and (v376==(0 + 0))) then v85=v85 + (340 -(44 + 295));v269=v95[v85];v376=514 -(408 + 105);end end end if ((v268==(1678 -(1625 + 27 + 25))) or ((4551 -((1211 -(83 + 810)) + 249))<((6087 -(320 + 236)) -(488 + 1340)))) then if (((4980 -((165 -68) + 75))>(2964 -(589 + 1325))) and (v269[(2 -1) -0]==(51 -26))) then v174[v265-(186 -(53 + 132))]={v101,v269[10 -7]};else v174[v265-(1 + 0)]={v39,v269[1 + 2]};end v100[ #v100 + 1]=v174;break;end end break;end end break;end end end v101[v103[877 -(688 + 187)]]=v37(v172,v173,v40);break;end if ((v171==(0 + 0)) or (2883==(131 -64))) then v172=v96[v103[1 + 2]];v173=nil;v171=247 -(242 + 4);end end elseif ((v104==(66 -42)) or ((1082 + 2311)<=(219 + (1517 -(258 + 735))))) then local v218=0 + 0;local v219;local v220;while true do if ((v218==(3 -2)) or (1273>=(512 + 3284))) then v101[v219 + 1]=v220;v101[v219]=v220[v103[4]];break;end if (((1972 -(762 + 684))<=1568) and (v218==(304 -(23 + 281)))) then local v286=(850 -(258 + 592)) -0;while true do if ((v286==(1 + 0)) or ((1611 -1239)==(3411 -749))) then v218=1;break;end if ((1235<=(512 + (4016 -(129 + 1390)))) and (v286==(0 + 0))) then v219=v103[2];v220=v101[v103[685 -(110 + 572)]];v286=1 + 0;end end end end else v101[v103[2]]=v101[v103[5 -(3 -1)]];end elseif ((v104<=((47 + 13) -33)) or ((2544 + 256)<(296 + 177))) then if (((3166 -1014)>(4068 -1957)) and (v104==26)) then v101[v103[799 -(403 + 394)]]=v101[v103[5 -2]][v103[1 + 3]];elseif ((2176<=(2213 + 390)) and (v101[v103[2 + 0]]~=v103[1211 -(506 + 701)])) then v85=v85 + (1995 -(1187 + 807));else v85=v103[6 -(278 -(60 + 215))];end elseif ((v104<=(1766 -(1126 + 612))) or (1115<=(993 -723))) then v85=v103[5 -2];elseif ((v104>(3 + 26)) or ((1414 -(831 + 355))>=(1094 + 921))) then v40[v103[2 + 1 + 0]]=v101[v103[2 + 0]];elseif ((v103[2]==v101[v103[4]]) or ((2480 -1333)>(4678 -2332))) then v85=v85 + 1;else v85=v103[3];end elseif ((v104<=(70 -(273 -(48 + 190)))) or ((1364 + 1583)==1629)) then if (((6858 -2900)==(11927 -7969)) and (v104<=32)) then if ((4804==(6155 -(1132 + 219))) and (v104==31)) then v101[v103[1 + 1]]=v103[1516 -(1083 + 430)]~=((3431 -1668) -((306 -214) + 1671));else local v179=1174 -(337 + 837);local v180;local v181;while true do if (((8900 -4185)>=(5590 -(52 + 912))) and (v179==(0 + 0))) then v180=537 -(259 + 278);v181=nil;v179=1 + 0;end if (((516 + 2595)>=(50 + 57)) and (((251 -(219 + 29)) -2)==v179)) then while true do if ((v180==0) or (2629==(735 + 2783))) then v181=v103[977 -(914 + 61)];v101[v181]=v101[v181](v13(v101,v181 + 1 + 0,v103[38 -(8 + 27)]));break;end end break;end end end elseif ((1825<=(20124 -15402)) and (v104<=(141 -(45 + 63)))) then for v188=v103[2 + 0],v103[3] do v101[v188]=nil;end elseif ((v104>(10 + 24)) or (1878>(3402 -(262 + 905)))) then local v226=0 + 0;local v227;local v228;local v229;local v230;local v231;while true do if ((v226==(77 -(49 + 28))) or ((2414 + 779)<(7062 -4591))) then v227=0 + 0;v228=nil;v226=1 + 0;end if ((v226==(1 + 1)) or ((1651 + 1783)>=(5397 -1348))) then v231=nil;while true do if ((v227==(1 + 0)) or ((396 + 1421)<=(2477 -739))) then v86=(v230 + v228) -(1 + 0);v231=(1559 -(1451 + 108)) -0;v227=319 -(59 + 258);end if ((v227==(6 -4)) or ((341 -133)>=(795 + (3569 -2674)))) then for v338=v228,v86 do local v339=0 -0;local v340;while true do if (((113 + 394)<=(12055 -(17251 -8832))) and (v339==(1369 -(1283 + 86)))) then v340=0 + 0;while true do if ((v340==0) or ((11 + 19)>((4661 -(441 + 355)) -(365 + 177)))) then v231=v231 + (1093 -(795 + 297));v101[v338]=v229[v231];break;end end break;end end end break;end if (((11902 -8157)>=(603 + 942)) and (v227==(779 -(753 + 26)))) then v228=v103[134 -(54 + 78)];v229,v230=v98(v101[v228]());v227=1376 -(1157 + 218);end end break;end if ((v226==(2 -(1242 -(688 + 553)))) or ((15976 -11761)>=(769 + 3973))) then v229=nil;v230=nil;v226=54 -(8 + 44);end end elseif ((v101[v103[2]]~=v101[v103[9 -(492 -(381 + 106))]]) or ((59 + 1212)>=((4008 -1545) -(33 + 2)))) then v85=v85 + 1 + 0;else v85=v103[1 + 2];end elseif (((5853 -(403 + 1416))>=2766) and (v104<=(1186 -(530 + 618)))) then if ((v104<=(5 + (645 -(358 + 256)))) or (4263==(51 + 145))) then v101[v103[2]]=v40[v103[7 -4]];elseif ((v104>(2001 -(1298 + 666))) or ((3608 -1461)>(442 + 2041))) then v101[v103[2]][v103[3]]=v103[4];else local v234=0 -(246 -(222 + 24));local v235;local v236;local v237;while true do if ((v234==(0 -0)) or ((1152 -(475 + (1682 -(34 + 1197))))==((4079 -(73 + 63)) -(1688 + 226)))) then v235=v103[2 -0];v236={v101[v235](v101[v235 + (588 -(8 + 579))])};v234=1 + 0;end if (((4600 -(1764 + 30))>=(1118 + 1538)) and (v234==(1 + 0))) then v237=1927 -(478 + 1449);for v298=v235,v103[1 + 3] do local v299=751 -(587 + 164);local v300;local v301;while true do if ((v299==(0 + 0)) or (((6511 -2747) -(637 + 288))>=(10561 -6339))) then v300=0;v301=nil;v299=3 -(285 -(88 + 195));end if ((v299==(3 -2)) or ((2258 -(18 + 365))<(3369 -(369 + 1404)))) then while true do if ((v300==(0 + 0)) or (3135<=((1532 -(420 + 725)) + 1272))) then v301=0 -(1980 -(1953 + 27));while true do if ((2287==(6403 -4116)) and ((390 -(192 + 198))==v301)) then v237=v237 + (2 -1) + 0;v101[v298]=v236[v237];break;end end break;end end break;end end end break;end end end elseif ((v104<=(3 + 14 + 22)) or ((2844 + 589)<=(5733 -4069))) then local v184=0 -0;local v185;local v186;local v187;while true do if ((1==v184) or (4146>=((6644 -(301 + 243)) -(365 + 1146)))) then v187=0;for v272=v185,v103[6 -2] do local v273=0 -0;local v274;while true do if (((535 -(99 + 436))==v273) or (((3975 -(1725 + 188)) + 2178 + 475)<=(1110 + 1374))) then v274=0 -0;while true do if ((v274==(0 -0)) or (3980==1812)) then v187=v187 + (1 -0);v101[v272]=v186[v187];break;end end break;end end end break;end if ((2520>=((1928 -(518 + 78)) -821)) and (v184==(763 -(6 + 757)))) then local v252=0;while true do if ((1920>1408) and (v252==((1107 + 246) -(352 + 1001)))) then v185=v103[2];v186={v101[v185](v13(v101,v185 + (2 -1),v86))};v252=1 + 0;end if ((v252==(1094 -(534 + 559))) or ((1348 + 75)==2970)) then v184=1 + 0;break;end end end end elseif (((885 + 266)==(1635 -((1266 -(328 + 576)) + (331 -209)))) and (v104==40)) then v101[v103[(7497 -5953) -(98 + 1219 + 225)]][v103[864 -((928 -593) + 526)]]=v101[v103[(38 -30) -4]];else local v240=204 -(157 + (903 -(119 + 737)));local v241;local v242;local v243;local v244;local v245;local v246;while true do if ((v240==1) or ((3159 -(848 + 1039))>=(3711 -(869 + 629)))) then v243=nil;v244=nil;v240=4 -2;end if ((v240==((4406 -2923) -(59 + 1422))) or ((1888 -464)<=(2963 -((2270 -(184 + 1134)) + 752)))) then local v288=1649 -(435 + 1214);while true do if (((1642 + 932)==(9479 -6905)) and (v288==(0 + 0))) then v245=nil;v246=nil;v288=1;end if ((v288==1) or ((13764 -9403)<=(617 + 109))) then v240=3;break;end end end if ((v240==(0 -0)) or (((27827 -22063) -(564 + 212))<=((2779 -(748 + 1058)) + 2528))) then v241=0 + 0;v242=nil;v240=319 -(89 + 229);end if ((v240==(535 -(211 + 321))) or ((6085 -(1257 + 363))<107)) then while true do if ((v241==((1871 -959) -(18 + 444 + 449))) or ((9715 -6766)>3611)) then local v326=0 -(572 -(56 + 516));while true do if ((v326==(0 + 0)) or ((345 + 3362)<=((3842 + 5515) -6654))) then local v367=0 + 0;while true do if ((v367==(1 -(0 + 0))) or ((3073 -1614)<(259 + 595))) then v326=2 -1;break;end if ((v367==0) or (3163>=(1579 + 1599))) then v244=v242 + 2;v245={v101[v242](v101[v242 + 1 + 0],v101[v244])};v367=1;end end end if (((4824 -(490 + 292))==(6798 -2756)) and (v326==1)) then v241=2;break;end end end if (((1 + 1)==v241) or ((719 + 41)==((3457 + 995) -(483 + 546)))) then local v327=(472 + 7) -((612 -370) + 237);local v328;while true do if ((v327==(736 -(29 + 707))) or (430>=(698 + 3166))) then v328=(8887 -7099) -(808 + 980);while true do if ((v328==(3 -2)) or ((5399 -2728)>4789)) then v241=(3 -1) + 1;break;end if (((0 -0)==v328) or ((1934 -(242 + 1250))>=(3319 + 798 + 694))) then local v386=0;while true do if (((3170 + 377)>((13996 -10069) -(338 + 63 + 209))) and (v386==0)) then for v404=1 + 0 + 0 + 0,v243 do v101[v244 + v404]=v245[v404];end v246=v245[1 + 0 + 0];v386=(2 -1) -0;end if ((v386==1) or ((4614 -(266 + 889))<=(2979 + (72 -40)))) then v328=1763 -(310 + 1452);break;end end end end break;end end end if (((2645 -(524 + 845))<(1682 + 427)) and (v241==3)) then if (v246 or ((471 + 708)>=(4158 -(761 + 409)))) then local v353=(463 + 671) -(1011 + 123);while true do if ((((318 -(223 + 23)) + 3697)>1488) and (v353==(0 -0))) then v101[v244]=v246;v85=v103[6 -3];break;end end else v85=v85 + 1 + 0;end break;end if ((v241==(0 + 0)) or ((6704 -((1930 -1100) + 1083))<=(3125 -(405 + 13)))) then local v329=0 -0;while true do if ((v329==1) or (140>=(405 + 65))) then v241=(2757 -(1396 + 345)) -(326 + 689);break;end if ((v329==0) or ((81 + 8 + 85)==(225 + 1805))) then local v368=0;while true do if ((v368==(1680 -(763 + (1043 -(114 + 13))))) or (((9223 -2994) -3745)>4068)) then v329=1023 -(739 + 283);break;end if ((v368==0) or ((783 -(395 + 172))>=2821)) then v242=v103[6 -4];v243=v103[3 + (4 -3)];v368=835 -(50 + 784);end end end end end end break;end end end v85=v85 + 1 + 0;break;end if ((v108==0) or ((4813 -(480 + 465))<(12159 -9567))) then local v128=0 + 0;while true do if ((((3129 + 1225) -(273 + 1421))<=(8495 -4648)) and (v128==(397 -(162 + 234)))) then v108=877 -(18 + 858);break;end if ((v128==0) or ((1439 -(139 + 92))>=(2324 -(100 + 40)))) then v103=v95[v85];v104=v103[1871 -(1527 + (1192 -849))];v128=2 -1;end end end end break;end end end end A,B=v35(v11(v89));if  not A[1] then local v105=v38[4][v85] or "?";error("Script error at ["   .. v105   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end;return v37(v36(),{},v24)(...);end if (2==v25) then v29=function()local v50=0;local v51;while true do if (v50==(0 + 0 + 0)) then v51=v2(v23,v26,v26);v26=v26 + (213 -(195 + 17));v50=910 -(397 + 512);end if (v50==1) then return v51;end end end;v30=nil;v30=function()local v52,v53=v2(v23,v26,v26 + 2 + 0);v26=v26 + 2 + 0;return (v53 * (705 -449)) + v52;end;v25=3;end if (v25==1) then v28=nil;v28=function(v41,v42,v43)if v43 then local v74=17 -(2 + 7 + 8);local v75;while true do if (v74==0) then v75=(v41/((2 + 0 + 0)^(v42-(1067 -(312 + 754)))))%((3 -(623 -(242 + 380)))^(((v43-(3 -2)) -(v42-(850 -(704 + 145)))) + 1));return v75-(v75%1);end end else local v76=0 + 0 + 0;local v77;while true do if (v76==0) then v77=(1020 -((1190 -(267 + 165)) + 260))^(v42-(1 -0));return (((v41%(v77 + v77))>=v77) and (1876 -(304 + (3551 -1980)))) or (0 + 0);end end end end;v29=nil;v25=2;end if (v25==3) then v31=nil;v31=function()local v54=1004 -(9 + 995);local v55;local v56;local v57;local v58;while true do if (v54==((0 -0) -0)) then v55,v56,v57,v58=v2(v23,v26,v26 + (471 -(27 + 441)));v26=v26 + (7 -3);v54=274 -(185 + 88);end if (v54==(1459 -(67 + 1391))) then return (v58 * 16777216) + (v57 * (18957 + 46579)) + (v56 * ((7998 -6095) -(1090 + 481 + 76))) + v55;end end end;v32=nil;v25=4;end if (v25==0) then v26=1;v27=nil;v23=v5(v4(v23,5),"..",function(v44)if (v2(v44,2)==79) then local v78=0;while true do if (v78==0) then v27=v1(v4(v44,1,1));return "";end end else local v79=v3(v1(v44,16));if v27 then local v84=v6(v79,v27);v27=nil;return v84;else return v79;end end end);v25=1;end if (4==v25) then v32=function()local v59=0 + 0;local v60;local v61;while true do if (v59==(0 + 0)) then v60=v31();v61=v31();v59=1105 -((211 -58) + 951);end if (v59==((1 + 0) -0)) then return (( -(1 + 1) * v28(v61,83 -51)) + (3 -2)) * (((57 + 537) -((707 -223) + 108))^(v28(v61,19 + 2,226 -(167 + 28)) -(96 + 927))) * ((((v28(v61,(1 -0) + 0,2 + 18) * ((596 -(397 + 197))^(44 -12))) + v60)/(2^52)) + (2 -1));end end end;v33=nil;v33=function(v45)local v62;if  not v45 then local v80=1186 -(70 + 1116);while true do if (v80==(531 -(113 + 418))) then v45=v31();if (v45==(1671 -(833 + (1571 -733)))) then return "";end break;end end end v62=v4(v23,v26,(v26 + v45) -(1576 -(381 + 1194)));v26=v26 + v45;local v63={};for v71=1 + 0, #v62 do v63[v71]=v3(v2(v4(v62,v71,v71)));end return v7(v63);end;v25=5;end if (v25==5) then v34=v31;v35=nil;v35=function(...)return {...},v12("#",...);end;v25=6;end if (v25==6) then v36=nil;v36=function()local v64=290 -(237 + 53);local v65;local v66;local v67;local v68;local v69;local v70;while true do local v73=0;while true do if (v73==0) then if (v64==(3 + 0)) then local v90=0 + 0;while true do if (v90~=(1562 -(890 + 671))) then else return v68;end if (v90==(1385 -(93 + 1292))) then for v114=1378 -(809 + 568),v31() do v66[v114-(2 -1)]=v36();end for v116=3 -2,v31() do v67[v116]=v31();end v90=4 -3;end end end if (v64==(1838 -(1612 + 226))) then local v91=0 + 0;while true do if (v91~=0) then else v65={};v66={};v91=1 + 0;end if ((1 -0)==v91) then v67={};v64=1 + 0;break;end end end v73=1;end if (v73==1) then if (v64==(3 -1)) then local v92=631 -(171 + 460);local v93;while true do if (v92==(0 -0)) then v93=0 + 0;while true do if (v93==(502 -(142 + 360))) then for v119=4 -3,v69 do local v120=1494 -(884 + 610);local v121;local v122;local v123;while true do if (v120==(0 + 0)) then v121=0 -0;v122=nil;v120=1;end if (v120==(3 -2)) then v123=nil;while true do if ((0 + 0)==v121) then v122=v29();v123=nil;v121=1 + 0;end if (v121~=(2 -1)) then else if (v122==1) then v123=v29()~=0;elseif (v122==2) then v123=v32();elseif (v122~=(1 + 2)) then else v123=v33();end v70[v119]=v123;break;end end break;end end end v68[6 -3]=v29();v93=1 + 0;end if (1~=v93) then else for v124=2 -1,v31() do local v125=0 -0;local v126;local v127;while true do if ((0 -0)~=v125) then else local v129=0 -0;while true do if (v129~=(0 + 0)) then else v126=0;v127=nil;v129=1441 -(1175 + 265);end if (v129==(1 -0)) then v125=711 -(78 + 632);break;end end end if (v125~=(1 + 0)) then else while true do if (v126~=(0 + 0)) then else v127=v29();if (v28(v127,1 + 0,3 -2)==(0 -0)) then local v133=136 -(133 + 3);local v134;local v135;local v136;local v137;local v138;while true do if (v133==(1 + 1)) then v138=nil;while true do if ((676 -(338 + 337))==v134) then local v253=0 -0;while true do if ((1 + 0)==v253) then v134=9 -7;break;end if (v253==0) then v137=nil;v138=nil;v253=1 + 0;end end end if ((1 + 1)~=v134) then else while true do if (v135~=(824 -(549 + 274))) then else local v303=0 + 0;while true do if (v303~=(1 + 0)) then else v135=1 + 1;break;end if (v303==(0 + 0)) then local v341=0 -0;local v342;while true do if (v341==(468 -(125 + 343))) then v342=927 -(506 + 421);while true do if (v342==1) then v303=543 -(57 + 485);break;end if (v342~=(143 -(99 + 44))) then else local v396=108 -(22 + 86);while true do if (v396~=(1 -0)) then else v342=4 -3;break;end if (v396~=(0 + 0)) then else v138={v30(),v30(),nil,nil};if (v136==(655 -(116 + 539))) then local v413=0;local v414;local v415;while true do if (v413==0) then v414=658 -(359 + 299);v415=nil;v413=1 + 0;end if (v413==(1 + 0)) then while true do if (v414~=0) then else v415=152 -(4 + 148);while true do if (v415==(1504 -(110 + 1394))) then v138[3 -0]=v30();v138[1438 -(66 + 1368)]=v30();break;end end break;end end break;end end elseif (v136==1) then v138[2 + 1]=v31();elseif (v136==(2 -0)) then v138[7 -4]=v31() -((2 -0)^(30 -14));elseif (v136==(584 -(573 + 8))) then local v425=0 -0;local v426;local v427;while true do if (v425==(1 + 0)) then while true do if (v426==(0 + 0)) then v427=1225 -(990 + 235);while true do if (v427==(275 -(10 + 265))) then v138[1710 -(716 + 991)]=v31() -((7 -5)^(723 -(272 + 435)));v138[8 -4]=v30();break;end end break;end end break;end if (v425~=(0 + 0)) then else v426=0;v427=nil;v425=50 -(7 + 42);end end end v396=1 + 0;end end end end break;end end end end end if (v135==(4 -2)) then local v304=1888 -(1562 + 326);local v305;while true do if (v304==(0 -0)) then v305=0 -0;while true do if (v305~=0) then else local v373=0 -0;while true do if ((1 -0)==v373) then v305=3 -2;break;end if (v373==(0 -0)) then local v397=382 -(143 + 239);while true do if (v397==(0 -0)) then if (v28(v137,631 -(191 + 439),1)==1) then v138[5 -3]=v70[v138[2]];end if (v28(v137,3 -1,1 + 1)~=(478 -(253 + 224))) then else v138[3]=v70[v138[1424 -(833 + 588)]];end v397=1;end if (v397~=(4 -3)) then else v373=1 + 0;break;end end end end end if (v305==(1598 -(1137 + 460))) then v135=6 -3;break;end end break;end end end if (v135~=3) then else if (v28(v137,1 + 2,370 -(308 + 59))==(1 + 0)) then v138[1 + 3]=v70[v138[890 -(19 + 867)]];end v65[v124]=v138;break;end if (v135==0) then local v307=53 -(35 + 18);local v308;while true do if (v307~=(1296 -(587 + 709))) then else v308=1895 -(364 + 1531);while true do if (v308==(2 -1)) then v135=1;break;end if ((0 + 0)==v308) then local v374=0 + 0;local v375;while true do if (v374~=(0 -0)) then else v375=0;while true do if (0==v375) then local v407=0 + 0;while true do if (v407~=(301 -(136 + 165))) then else v136=v28(v127,565 -(342 + 221),1999 -(826 + 1170));v137=v28(v127,1163 -(1067 + 92),25 -19);v407=1 + 0;end if (v407~=(1517 -(221 + 1295))) then else v375=1 + 0;break;end end end if (v375==(1 + 0)) then v308=1 -0;break;end end break;end end end end break;end end end end break;end if (v134==0) then local v254=937 -(668 + 269);local v255;while true do if ((0 + 0)==v254) then v255=0 -0;while true do if (v255==0) then local v343=1049 -(543 + 506);while true do if (v343~=0) then else v135=725 -(254 + 471);v136=nil;v343=425 -(77 + 347);end if (v343==(1 -0)) then v255=1;break;end end end if (v255~=1) then else v134=1;break;end end break;end end end end break;end if (v133==0) then v134=0;v135=nil;v133=1 + 0;end if (v133==(4 -3)) then v136=nil;v137=nil;v133=2;end end end break;end end break;end end end v64=3;break;end end break;end end end if (v64~=(3 -2)) then else local v94=0 + 0;while true do if (v94==(2 -1)) then v70={};v64=729 -(576 + 151);break;end if ((0 -0)==v94) then local v109=0;while true do if (v109==(0 + 0)) then v68={v65,v66,nil,v67};v69=v31();v109=1;end if (v109==(1132 -(159 + 972))) then v94=587 -(54 + 532);break;end end end end end break;end end end end;v37=nil;v25=7;end end end;v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end end end
