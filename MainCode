--[[

██████╗░██████╗░███████╗░█████╗░██████╗░██╗░░░██╗  ░█████╗░███████╗███████╗██╗░█████╗░██╗░█████╗░██╗░░░░░
██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔══██╗╚██╗░██╔╝  ██╔══██╗██╔════╝██╔════╝██║██╔══██╗██║██╔══██╗██║░░░░░
██║░░██║██████╔╝█████╗░░███████║██████╔╝░╚████╔╝░  ██║░░██║█████╗░░█████╗░░██║██║░░╚═╝██║███████║██║░░░░░
██║░░██║██╔══██╗██╔══╝░░██╔══██║██╔══██╗░░╚██╔╝░░  ██║░░██║██╔══╝░░██╔══╝░░██║██║░░██╗██║██╔══██║██║░░░░░
██████╔╝██║░░██║███████╗██║░░██║██║░░██║░░░██║░░░  ╚█████╔╝██║░░░░░██║░░░░░██║╚█████╔╝██║██║░░██║███████╗
╚═════╝░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░  ░╚════╝░╚═╝░░░░░╚═╝░░░░░╚═╝░╚════╝░╚═╝╚═╝░░╚═╝╚══════╝

\_This Lua Script was made by (Alpha 0.1.8) _/
█░░ █░█ ▄▀█ █▀█ █▄▄ █▀▀ █░█ █▀ █▀▀ ▄▀█ ▀█▀ █▀█ █▀█
█▄▄ █▄█ █▀█ █▄█ █▄█ █▀░ █▄█ ▄█ █▄▄ █▀█ ░█░ █▄█ █▀▄

Programed by 4kgw#4444 
https://discord.gg/WeppkaK62E
v1.8.9

          This script has been licensed using Dreary Official
      Unauthorized distribution of this script is forbidden.
Any attempts at tampering, reverse engineering or modifying this script
            internal logic will result in a global ban.
            
            STOP TRYING TO STEAL THE SOURCE CODE NIGGER BOY
            IF YOU WANNA LEARN SHIT DM ME BRO 💀💀💀☠️
      
           
 --]]

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v62=0;while true do if (v62==0) then v18=v0(v3(v29,1,1));return "";end end else local v63=v2(v0(v29,16));if v18 then local v75=v5(v63,v18);v18=nil;return v75;else return v63;end end end);local function v19(v30,v31,v32)if v32 then local v64=(v30/((1 + 1)^(v31-(1 -0))))%((6 -4)^(((v32-(3 -2)) -(v31-(1 + 0))) + 1));return v64-(v64%((348 + 1158) -(1006 + 499)));else local v65=(120 -(21 + 99)) -0;local v66;while true do if (v65==(0 + 0)) then v66=(5 -3)^(v31-(1 + (0 -0)));return (((v30%(v66 + v66))>=v66) and (2 -(1503 -(412 + 1090)))) or 0;end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=0 -0;local v39;local v40;while true do if ((2 -1)==v38) then return (v40 * (468 -212)) + v39;end if (v38==(0 -(0 + 0))) then v39,v40=v1(v15,v17,v17 + (3 -1));v17=v17 + (1705 -(510 + 1193));v38=1;end end end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + 1 + 2);v17=v17 + 4 + (0 -0);return (v44 * (16778201 -(576 + 409))) + (v43 * (65923 -(280 + 107))) + (v42 * (409 -153)) + v41;end local function v23()local v45=v22();local v46=v22();return (( -(1 + 1) * v19(v46,1875 -(868 + (2734 -(97 + 1662))))) + (563 -(7 + 555))) * (((2846 -(1007 + 774)) -(497 + 566))^(v19(v46,668 -(76 + 571),31) -(488 + 535))) * ((((v19(v46,1 + 0,51 -31) * ((9 -7)^(145 -113))) + v45)/((1 + 0 + (2 -1))^(759 -(52 + (933 -(13 + 265)))))) + 1 + 0);end local function v24(v33)local v47=0 + 0;local v48;local v49;while true do if (v47==(1 + 1)) then v49={};for v76=1 + 0, #v48 do v49[v76]=v2(v1(v3(v48,v76,v76)));end v47=10 -7;end if (v47==(0 + 0)) then v48=nil;if  not v33 then v33=v22();if (v33==(1141 -(917 + 224))) then return "";end end v47=3 -2;end if (v47==(2 + 1)) then return v6(v49);end if (v47==((4 -2) -1)) then v48=v3(v15,v17,(v17 + v33) -(3 -2));v17=v17 + v33;v47=2;end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v50=0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50~=1) then else local v72=0;while true do if (v72==(196 -(76 + 119))) then v50=4 -2;break;end if (v72==(0 + 0)) then v53=nil;v54=nil;v72=1546 -(1354 + 191);end end end if (v50~=4) then else while true do if (v51==2) then local v92=355 -(108 + 247);while true do if (v92==(0 + 0)) then local v103=1642 -(1120 + 522);while true do if (v103==1) then v92=1;break;end if (v103~=(0 + 0)) then else v56=nil;v57=nil;v103=922 -(616 + 305);end end end if (v92==(329 -(22 + 306))) then v51=3;break;end end end if ((0 + 0)~=v51) then else local v93=0;local v94;while true do if (v93~=0) then else v94=0;while true do if (v94==(0 -0)) then v52=1659 -(1456 + 203);v53=nil;v94=1;end if (1==v94) then v51=1;break;end end break;end end end if (v51~=(1 + 0)) then else local v95=0 -0;while true do if (v95~=(1 + 0)) then else v51=6 -4;break;end if (v95==(77 -(16 + 61))) then v54=nil;v55=nil;v95=1;end end end if ((327 -(45 + 279))==v51) then v58=nil;while true do local v96=0 + 0;local v97;local v98;while true do if (v96==(1 + 0)) then while true do if (0~=v97) then else v98=0;while true do if (0~=v98) then else local v107=0;while true do if (v107==0) then if (v52==(4 -3)) then local v113=1653 -(582 + 1071);local v114;while true do if (v113~=(0 + 0)) then else v114=1650 -(611 + 1039);while true do if (v114==0) then v56={v53,v54,nil,v55};v57=v22();v114=1 + 0;end if (v114==(1 + 0)) then v58={};v52=86 -(14 + 70);break;end end break;end end end if (v52~=0) then else local v115=0;local v116;while true do if (v115~=0) then else v116=0 -0;while true do if (v116~=0) then else local v245=0 + 0;local v246;while true do if ((0 -0)==v245) then v246=0;while true do if (v246==(0 -0)) then v53={};v54={};v246=1;end if (v246~=(1 + 0)) then else v116=2 -1;break;end end break;end end end if (v116~=1) then else v55={};v52=1;break;end end break;end end end v107=1;end if (1~=v107) then else v98=1;break;end end end if (v98==1) then if (v52==2) then local v108=0;local v109;local v110;while true do if (v108==(275 -(36 + 239))) then v109=0 -0;v110=nil;v108=1;end if (v108==(142 -(135 + 6))) then while true do if (v109==(0 + 0)) then v110=1485 -(1009 + 476);while true do if (v110==1) then for v271=3 -2,v22() do local v272=631 -(567 + 64);local v273;local v274;local v275;while true do if (v272~=0) then else v273=0;v274=nil;v272=1;end if (1==v272) then v275=nil;while true do if (v273==0) then local v349=0 + 0;while true do if ((1257 -(658 + 599))==v349) then v274=554 -(25 + 529);v275=nil;v349=1821 -(879 + 941);end if (1~=v349) then else v273=1463 -(389 + 1073);break;end end end if ((1 + 0)==v273) then while true do if (0==v274) then v275=v20();if (v19(v275,1,1465 -(1311 + 153))==0) then local v382=0;local v383;local v384;local v385;local v386;local v387;while true do if (v382~=1) then else local v390=1472 -(205 + 1267);while true do if (v390~=0) then else v385=nil;v386=nil;v390=1;end if (v390==1) then v382=3 -1;break;end end end if (v382==0) then v383=0;v384=nil;v382=1;end if (v382==(242 -(196 + 44))) then v387=nil;while true do if (v383==(487 -(211 + 275))) then local v405=0;local v406;while true do if ((0 -0)~=v405) then else v406=0;while true do if (v406==0) then local v420=0;while true do if (1~=v420) then else v406=1581 -(7 + 1573);break;end if (v420==(0 + 0)) then v386=nil;v387=nil;v420=1;end end end if (v406~=(548 -(95 + 452))) then else v383=2;break;end end break;end end end if (v383==(0 -0)) then local v407=0;local v408;while true do if (v407==0) then v408=0;while true do if (v408~=(2 -1)) then else v383=1;break;end if (v408==(970 -(19 + 951))) then local v421=0;while true do if (v421==1) then v408=3 -2;break;end if (v421==(1491 -(775 + 716))) then v384=0 + 0;v385=nil;v421=1 -0;end end end end break;end end end if (v383==(1563 -(511 + 1050))) then while true do if (v384==3) then if (v19(v386,3,3)~=(573 -(220 + 352))) then else v387[4]=v58[v387[4]];end v53[v271]=v387;break;end if ((2 -1)~=v384) then else local v413=704 -(474 + 230);while true do if (v413==(0 + 0)) then v387={v21(),v21(),nil,nil};if (v385==0) then local v428=0;local v429;while true do if ((0 -0)==v428) then v429=0 + 0;while true do if (v429~=(0 -0)) then else v387[4 -1]=v21();v387[331 -(318 + 9)]=v21();break;end end break;end end elseif (v385==1) then v387[1 + 2]=v22();elseif (v385==(2 + 0)) then v387[3]=v22() -(2^(1590 -(353 + 1221)));elseif (v385==(7 -4)) then local v442=0;local v443;while true do if (v442~=(801 -(267 + 534))) then else v443=0 + 0;while true do if (v443~=0) then else v387[3 + 0]=v22() -((2 + 0)^(29 -13));v387[4]=v21();break;end end break;end end end v413=1063 -(696 + 366);end if ((1 + 0)==v413) then v384=2;break;end end end if (v384==0) then local v414=178 -(11 + 167);local v415;while true do if ((1460 -(569 + 891))==v414) then v415=0;while true do if ((1 + 0)~=v415) then else v384=1 + 0;break;end if (v415~=0) then else local v430=0;local v431;while true do if (v430~=0) then else v431=0 -0;while true do if (v431~=1) then else v415=1;break;end if (0==v431) then local v448=0;while true do if (v448~=(0 -0)) then else v385=v19(v275,2,3);v386=v19(v275,4 + 0,356 -(36 + 314));v448=2 -1;end if (v448==(1 + 0)) then v431=925 -(201 + 723);break;end end end end break;end end end end break;end end end if (v384==(2 + 0)) then local v416=1081 -(626 + 455);while true do if (v416==0) then local v422=0 -0;local v423;while true do if (v422~=0) then else v423=0;while true do if (v423==(4 -3)) then v416=1;break;end if (v423==(0 -0)) then if (v19(v386,1,1)==1) then v387[1755 -(281 + 1472)]=v58[v387[3 -1]];end if (v19(v386,2,2)==1) then v387[3]=v58[v387[3]];end v423=1;end end break;end end end if (v416==(1 + 0)) then v384=3;break;end end end end break;end end break;end end end break;end end break;end end break;end end end v52=709 -(62 + 644);break;end if (0==v110) then local v247=0;local v248;while true do if (v247~=0) then else v248=0 -0;while true do if (0~=v248) then else for v350=912 -(154 + 757),v57 do local v351=0 -0;local v352;local v353;local v354;local v355;local v356;while true do if (v351==(2 + 0)) then v356=nil;while true do if (v352==(1 + 0)) then local v388=0 -0;while true do if (v388~=(2 -1)) then else v352=2;break;end if (v388==(186 -(141 + 45))) then v355=nil;v356=nil;v388=1;end end end if (v352==2) then while true do if (v353==0) then local v395=0 -0;while true do if (1~=v395) then else v353=94 -(39 + 54);break;end if (v395==0) then v354=1678 -(159 + 1519);v355=nil;v395=723 -(598 + 124);end end end if (v353~=(259 -(193 + 65))) then else v356=nil;while true do if (v354~=1) then else if (v355==(1128 -(283 + 844))) then v356=v20()~=(0 -0);elseif (v355==2) then v356=v23();elseif (v355==3) then v356=v24();end v58[v350]=v356;break;end if (v354~=0) then else local v410=0;local v411;while true do if (v410==(0 -0)) then v411=0;while true do if (v411==0) then local v424=0;while true do if (v424~=0) then else v355=v20();v356=nil;v424=125 -(106 + 18);end if (1==v424) then v411=1;break;end end end if (v411==(1 -0)) then v354=1;break;end end break;end end end end break;end end break;end if (v352==0) then v353=0;v354=nil;v352=1471 -(141 + 1329);end end break;end if (v351~=(0 -0)) then else v352=1118 -(363 + 755);v353=nil;v351=1 + 0;end if (v351~=(1 -0)) then else v354=nil;v355=nil;v351=1789 -(1317 + 470);end end end v56[3 -0]=v20();v248=1;end if (v248~=(2 -1)) then else v110=1;break;end end break;end end end end break;end end break;end end end if (v52~=(2 + 1)) then else local v111=0;while true do local v112=0;while true do if (0==v112) then if (v111==(1 + 0)) then return v56;end if (v111~=(0 -0)) then else local v224=0;local v225;while true do if (v224==0) then v225=0 + 0;while true do if (v225==1) then v111=580 -(78 + 501);break;end if (0==v225) then local v315=1118 -(565 + 553);while true do if (v315==1) then v225=1;break;end if (v315==(0 -0)) then for v357=1 + 0,v22() do v54[v357-1]=v27();end for v359=1,v22() do v55[v359]=v22();end v315=1 + 0;end end end end break;end end end break;end end end end break;end end break;end end break;end if (v96==0) then v97=0 + 0;v98=nil;v96=1;end end end break;end end break;end if (v50==(5 -3)) then local v73=0 -0;while true do if (v73~=0) then else v55=nil;v56=nil;v73=1;end if (v73~=(1 + 0)) then else v50=774 -(554 + 217);break;end end end if (v50~=3) then else local v74=0;while true do if (v74~=(2 -1)) then else v50=13 -9;break;end if (v74==0) then v57=nil;v58=nil;v74=1 + 0;end end end if (v50~=0) then else v51=0;v52=nil;v50=1 -0;end end end local function v28(v34,v35,v36)local v59=v34[1];local v60=v34[2];local v61=v34[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v11("#",...) -1;local function v71()local v78=v59;local v79=v60;local v80=v61;local v81=v26;local v82={};local v83={};local v84={};for v89=0,v70 do if ((v89>=v80) or ((7027 -4394)<(262 + (9238 -7299)))) then v82[v89-v80]=v69[v89 + (1418 -(1066 + 351))];else v84[v89]=v69[v89 + 1 + 0];end end local v85=(v70-v80) + (1319 -(890 + 428));local v86;local v87;while true do local v90=0 + 0;local v91;while true do if (((954 + 2160)>(2380 -(60 + 1244))) and (v90==(1147 -(894 + 253)))) then v91=638 -(284 + (1650 -1296));while true do if ((v91==((2 -1) + 0)) or ((3309 -(136 + 35))>(12728 -7902))) then if ((v87<=(56 -(34 + 3))) or ((2912 -(599 + 745))>=(6505 -1839))) then if (((375 + 1429)==(1600 + (823 -(147 + 472)))) and (v87<=(379 -(146 + (1657 -(1154 + 279)))))) then if ((v87<=(11 -7)) or (3126==(4513 -(293 + 957)))) then if ((v87<=((1707 -(1199 + 505)) -2)) or ((2113 + 1359)<(2907 -(473 + 1399)))) then if ((v87>(0 + 0)) or ((5821 -(233 + 1323))>(1914 + 2991))) then v84[v86[7 -5]]=v84[v86[(887 -(62 + 823)) + 1]][v86[2 + 2]];else v84[v86[(747 -240) -(353 + 152)]]();end elseif ((v87<=(1093 -(501 + 590))) or ((5008 -(1075 + 722))>(5069 -1706))) then v67=v86[8 -5];elseif ((v87>(2 + 1)) or ((3654 -1817)>=(5707 -(118 + 1402)))) then if (((120 + 161 + 1549)>=(1533 -821)) and (v84[v86[1225 -(611 + 612)]]==v86[1303 -(1030 + (2247 -(961 + 1017)))])) then v67=v67 + (1563 -(185 + (5925 -4548)));else v67=v86[3];end else local v174=0 + 0;local v175;while true do if (((5451 -(445 + (446 -225)))>=(341 -258)) and (v174==(0 -0))) then v175=v86[2 + 0];v84[v175](v12(v84,v175 + (1582 -(947 + 634)),v68));break;end end end elseif ((v87<=(211 -(29 + 124 + 52))) or ((1302 + 908)<=(3049 -1344))) then if (((2317 -(640 + 712))<=(4626 -(545 + 499))) and (v87>5)) then if (v84[v86[1 + 1]] or ((2612 -1513)>(5838 -(236 + 1353)))) then v67=v67 + (1 -0);else v67=v86[1925 -(31 + 1891)];end else local v120=0 -0;local v121;while true do if (((3389 -(32 + 369))>=(2033 -(627 + (2250 -942)))) and (v120==(0 + 0))) then v121=v86[1 + 1];v84[v121](v84[v121 + (3 -2)]);break;end end end elseif ((v87<=7) or ((6158 -(1299 + 515))<=(5718 -(571 + 1097)))) then local v122=0 + 0;local v123;local v124;local v125;while true do if (((0 -0)==v122) or ((301 + 221)>=1594)) then v123=0 + (0 -0);v124=nil;v122=1077 -(309 + 767);end if ((v122==(392 -(295 + 96))) or ((3128 -(1782 + 531))>(3359 -(1664 + (106 -32))))) then v125=nil;while true do if (((276 + 200)<=(445 + 4518)) and ((3 -2)==v123)) then for v276=v124 + 1 + 0,v86[6 -2] do v125=v125   .. v84[v276];end v84[v86[345 -(257 + 86)]]=v125;break;end if ((v123==(0 + 0)) or (1515==(380 + 282))) then local v250=1706 -(1182 + 524);while true do if (((1064 -(271 + 279))<(1376 + 3031)) and ((0 + 0)==v250)) then v124=v86[860 -(452 + 405)];v125=v84[v124];v250=922 -(71 + 449 + 401);end if ((v250==(1 + 0)) or (((13803 + 232) -10487)<(2716 -(282 + 76)))) then v123=1 + 0;break;end end end end break;end end elseif ((v87==(538 -(513 + 17))) or ((5332 -((4234 -3282) + 405))>(6654 -(1943 + 50)))) then local v177=0 + 0;local v178;local v179;local v180;while true do if (((1633 + 3219)>(1784 -(523 + (221 -127)))) and (v177==(0 + 0))) then v178=0 -0;v179=nil;v177=2 -1;end if ((v177==(1 -0)) or ((3404 + 1154)<=(5736 -(4232 -(331 + 2))))) then v180=nil;while true do if ((v178==(0 -0)) or (4921<=(1379 -1028))) then v179=0 -0;v180=nil;v178=1965 -(648 + 585 + 731);end if (((283 + 1562)>(1344 -(368 + 234))) and (v178==(1 + 0))) then while true do if (((2339 -(1050 + 659))<(3143 + (5288 -3877))) and ((1571 -(806 + 765))==v179)) then v180=v86[2 + 0];v84[v180]=v84[v180](v12(v84,v180 + ((1282 -(689 + 592)) -0),v68));break;end end break;end end break;end end else local v181=598 -(128 + 470);local v182;local v183;while true do if (((367 -(94 + 272))==v181) or (354>=(6721 -(759 + 1144)))) then while true do if ((((64 -(29 + 28)) + 7)<=(2579 -(25 + (1811 -947)))) and (v182==(0 + 0))) then v183=v86[5 -3];v84[v183]=v84[v183](v84[v183 + ((142 + 1568) -(662 + 1047))]);break;end end break;end if (((0 + 0)==v181) or ((6610 -3262)==(15644 -11151))) then v182=0 + 0;v183=nil;v181=3 -2;end end end elseif ((v87<=((2 -0) + 12)) or ((5918 -1943)<=(508 -(8 + 8)))) then if ((v87<=((1124 -(182 + 47)) -(614 + 270))) or ((3776 -(166 + 585))<(40 + 861))) then if ((v87>(1717 -(1656 + 51))) or ((4519 -(298 + 228))<=(5514 -(206 + 1692)))) then v84[v86[1717 -(96 + 1619)]]=v28(v79[v86[5 -2]],nil,v36);else local v127=1368 -(1189 + 179);local v128;local v129;local v130;local v131;while true do if (((5533 -((1251 -793) + 1136))<=4556) and (v127==(1358 -(719 + (2200 -(1443 + 120)))))) then while true do if (((6 + 3087)<(14676 -10152)) and (v128==(1 -0))) then v131=0 + 0;for v277=v129,v86[(96 -(44 + 49)) + 1] do local v278=0;while true do if ((v278==(0 + 0)) or ((3762 -(115 + (119 -26)))==3621)) then v131=v131 + (2 -1);v84[v277]=v130[v131];break;end end end break;end if ((v128==(128 -(15 + 113))) or ((4759 -(42 + 303))==(2425 + 2340))) then local v251=0;while true do if (((6234 -3819)==(4479 -2064)) and (v251==(1830 -(236 + 1593)))) then v128=(337 + 831) -(828 + (1965 -(828 + 798)));break;end if (((663 -(290 -84))<(5074 -(1797 + 63))) and (v251==(1726 -(1377 + 349)))) then v129=v86[1 + 1];v130={v84[v129](v84[v129 + 1 + (0 -0)])};v251=1 -0;end end end end break;end if ((v127==(1 + (1613 -(1108 + 505)))) or ((1109 -(13 + 114))>(611 + 1809))) then local v227=0 + 0;while true do if (((2188 + 1674)>=((6043 -3632) -(189 + 1643))) and (v227==(0 -0))) then v130=nil;v131=nil;v227=688 -(28 + 659);end if (((1139 -(77 + (2623 -(1024 + 538))))==v227) or ((2441 -814)<(725 + (777 -166)))) then v127=1728 -(610 + 1116);break;end end end if (((3201 -(546 + 513))<(4905 -(223 + 59 + 1260))) and (v127==(0 -0))) then v128=0 -0;v129=nil;v127=2 -(2 -1);end end end elseif ((v87<=(16 -4)) or (((4472 -(1377 + 247)) + 1184)<=(4319 -(518 + 263 + 133)))) then v36[v86[10 -7]]=v84[v86[5 -(586 -(530 + 53))]];elseif ((v87>(10 + 3)) or ((15585 -12279)<=1283)) then v84[v86[6 -4]]=v86[11 -8];else v84[v86[1 + 0 + 1]]=v36[v86[2 + 1]];end elseif (((208 + 489)<=(8990 -5587)) and (v87<=(1874 -(1233 + 625)))) then if ((((2482 + 4922) -3780)>=(7397 -4555)) and (v87==(50 -35))) then local v134=600 -(282 + 318);local v135;local v136;local v137;local v138;while true do if ((v134==(662 -(58 + (2243 -(950 + 690))))) or ((969 -721)<=(1143 -(447 + 618)))) then local v228=0 + (753 -(96 + 657));while true do if ((v228==(1 -0)) or ((862 + 322)<=(21 -7))) then v134=(1125 -(45 + 378)) -((708 -498) + 490);break;end if ((v228==(0 + 0)) or (2114>=(4556 -(617 + 41)))) then v137=nil;v138=nil;v228=1 + (1327 -(106 + 1221));end end end if ((v134==(1523 -(469 + 1054))) or ((905 + 548)==891)) then local v229=0 + 0;while true do if ((v229==(1 + 0)) or ((155 + 1568)<=(665 + 115))) then v134=978 -(255 + 722);break;end if ((v229==(1098 -(944 + 154))) or ((2138 -(1758 + 208))>(5338 -3142))) then v135=0 -0;v136=nil;v229=1913 -(304 + 1608);end end end if (((15285 -10839)>=(14470 -10374)) and (v134==((4556 -3279) -(410 + 865)))) then while true do if ((v135==1) or ((2921 -(78 + 1215))<=(294 + 1224))) then v138=v86[3 + 0];for v279=1459 -(1427 + 31),v138 do v137[v279]=v84[v136 + v279];end break;end if (((4541 -(54 + 425))>(2057 + (1466 -777))) and (v135==(0 + 0))) then local v253=0 + 0;while true do if ((v253==((3481 -(1315 + 442)) -(128 + 1595))) or ((13380 -8792)<((3426 -(58 + 294)) + 232))) then v135=1 -0;break;end if ((((4756 -(1124 + 10)) -2688)<=(3051 -(199 + 71))) and (v253==(0 + 0))) then local v319=239 -((2136 -(613 + 1384)) + 100);while true do if ((v319==(0 + 0)) or ((1874 -(91 + 20))>=(3562 -(212 + 447)))) then v136=v86[3 -(3 -2)];v137=v84[v136];v319=3 -2;end if (((3579 -(830 + 187))>=(2618 -(227 + 142 + 234))) and (v319==((1383 -(194 + 1188)) -0))) then v253=2 -1;break;end end end end end end break;end end else local v139=1606 -(1542 + 64);local v140;local v141;while true do if ((v139==(494 -(367 + 126))) or ((100 + 6)>(497 -388))) then while true do if ((v140==(0 -0)) or ((3691 -(3730 -(688 + 593)))>(2231 -(32 + 54)))) then v141=v86[766 -(262 + 502)];v84[v141]=v84[v141](v12(v84,v141 + 1 + 0,v86[(1540 -(206 + 1252)) -(7 + 72)]));break;end end break;end if ((v139==(0 + 0)) or ((2308 + 1396)>(3228 + (2577 -(959 + 721))))) then v140=1500 -(912 + (1669 -1081));v141=nil;v139=1 + 0;end end end elseif (((56 + 169)==(803 -578)) and (v87<=(172 -(78 + 77)))) then local v142=(1010 -(648 + 362)) -(0 -0);local v143;local v144;while true do if (((948 + 708)<=(6605 -3467)) and (v142==(1171 -(133 + 1037)))) then v84[v143 + (3 -2)]=v144;v84[v143]=v144[v86[9 -5]];break;end if (((2873 -1941)==(2176 -1244)) and (v142==(0 -0))) then v143=v86[2];v144=v84[v86[7 -4]];v142=(394 + 125) -(337 + 58 + 123);end end elseif (((839 -(216 + 332))<=(1500 + 1542)) and (v87>(818 -(740 + 60)))) then v84[v86[1588 -(780 + (1881 -1075))]]=v35[v86[2 + 1]];else local v190=0 -0;local v191;local v192;local v193;local v194;while true do if ((v190==(2 + 0)) or ((2152 -((2584 -(1147 + 454)) + (2251 -1757)))>=(5082 -1341))) then while true do if ((4557>(5252 -1731)) and (v191==(0 -(198 -(79 + 119))))) then local v301=0 + 0;while true do if ((v301==(193 -(52 + 140))) or ((5441 -(1187 + 281))<=((5828 -(76 + 882)) -3188))) then v191=1 + 0 + 0;break;end if ((v301==(0 + 0)) or ((4251 -(388 + 811))<=((803 -442) + 165))) then v192=0 -0;v193=nil;v301=256 -(168 + 87);end end end if (((1294 + 290)<=(4946 -(1088 + 432))) and (v191==((3081 -(828 + 676)) -(1202 + 374)))) then v194=nil;while true do if ((v192==(1892 -(1664 + 228))) or ((6056 -(117 + 1580))==(153 + 152))) then local v328=0;while true do if (((2873 + 1360)>=(3213 -(574 + 381))) and (v328==(0 + 0))) then v193=v86[1207 -(171 + 1034)];v194={};v328=997 -(801 + 195);end if ((((132 + 7771) -(224 + 4628))<=(3406 -((34 -19) + 115))) and (v328==(1 -0))) then v192=1 -0;break;end end end if ((v192==(1075 -(976 + 98))) or ((656 + 136)>(4156 -(4 + 10 + (538 -370))))) then for v338=(1 + 1) -1, #v83 do local v339=0 -(1443 -(1227 + 216));local v340;local v341;local v342;while true do if ((v339==(1 -(1225 -(652 + 573)))) or ((122 + 1494 + 1564)>=(5292 -(308 + 671)))) then v342=nil;while true do if (((3480 -(450 + 600))<(2621 + 718)) and (v340==(1 + 0))) then while true do if ((v341==(1818 -(266 + 1552))) or ((12187 -9031)>((43138 -32138) -7749))) then v342=v83[v338];for v396=0 -0, #v342 do local v397=0 + (1274 -(358 + 916));local v398;local v399;local v400;local v401;local v402;while true do if (((5112 -(1088 + 181))>1801) and (v397==(1 + 0))) then v400=nil;v401=nil;v397=3 -1;end if ((((1120 + 2631) -1330)<(13595 -9058)) and (v397==(1 + 1))) then v402=nil;while true do if ((v398==(0 -0)) or ((1706 -((178 -131) + (335 -130)))>(4801 + 7))) then local v417=0 + 0;while true do if ((v417==(467 -(89 + 377))) or ((282 + 270)>((800 -(113 + 160)) + 28))) then v398=411 -(292 + (383 -265));break;end if (((4934 -(116 + 10 + 59))>=2124) and (v417==(0 + 0))) then v399=(0 -0) + 0;v400=nil;v417=884 -(26 + 857);end end end if ((v398==(2 -1)) or ((7560 -2677)<=(1361 + 2240))) then v401=nil;v402=nil;v398=2;end if (((4470 -2776)<(17882 -(54087 -40760))) and (v398==(2 + 0))) then while true do if ((v399==(0 -0)) or ((1362 -(973 + 25))<=(136 + 67))) then local v425=176 -(10 + 166);local v426;while true do if (((2493 -(849 + 969))==(1390 -(313 + 402))) and (v425==((477 + 1449) -(1412 + 514)))) then v426=858 -(702 + 156);while true do if ((v426==(1340 -(1037 + 302))) or ((290 + (1178 -(405 + 242)))>=(3413 -(423 + (596 -335))))) then v399=1;break;end if (((813 -(308 + 491))<2487) and (v426==(1756 -(1616 + 140)))) then v400=v342[v396];v401=v400[2 -1];v426=283 -(51 + 231);end end break;end end end if (((1 -0)==v399) or ((1912 -(53 + 150))==(329 + (1023 -335)))) then v402=v400[403 -(390 + (21 -10))];if (((v401==v84) and (v402>=v193)) or ((8335 -4819)>=4087)) then local v432=(1291 -(1180 + 111)) + 0;while true do if ((v432==(1635 -(275 + 1360))) or ((10191 -(12042 -5625))<(8188 -(20484 -14283)))) then v194[v402]=v401[v402];v400[1 + 0]=v194;break;end end end break;end end break;end end break;end if ((v397==(0 -0)) or ((789 -187)>(5434 -1877))) then v398=339 -((302 -189) + 226);v399=nil;v397=1 + 0;end end end break;end end break;end if ((v340==(78 -(59 + 19))) or ((1565 + 746)==(4236 -(132 + 701)))) then v341=1732 -((1300 -926) + 1358);v342=nil;v340=3 -2;end end break;end if (((3892 -3104)<(3999 -(188 + 127))) and (v339==(1695 -(400 + 1295)))) then v340=100 -(65 + (149 -114));v341=nil;v339=1 + 0;end end end break;end end break;end end break;end if (((1733 + 500)<=(17276 -12686)) and (v190==((1197 -(512 + 684)) + 0))) then v193=nil;v194=nil;v190=136 -(8 + 126);end if (((6362 -4104)<(2595 + 413)) and (v190==(0 -0))) then v191=(2996 -(899 + 483)) -(568 + 1046);v192=nil;v190=449 -(142 + (690 -384));end end end elseif (((3203 -(130 + 311))<=(6413 -(130 + 1760))) and (v87<=(19 + 10))) then if (((345 + 14)<=(1546 + 1977)) and (v87<=(801 -(618 + 65 + 94)))) then if ((v87<=(5 + 16)) or (118>=((1783 -(438 + 377)) + 197))) then if ((v87==(12 + 8)) or ((2125 -1280)==(2782 + 36))) then v84[v86[(3305 -(1014 + 829)) -((2806 -1627) + 281)]]=v86[2 + 1]~=(0 + 0);else local v146=586 -(449 + 137);local v147;local v148;while true do if (((1284 + 3233)>=(231 + 82)) and ((1 + 0)==v146)) then for v240=v147 + (3 -2),v86[1873 -(797 + 1073)] do v7(v148,v84[v240]);end break;end if ((v146==(426 -(267 + 159))) or ((5265 -(1259 + 419))==(751 -(7 + 67)))) then v147=v86[980 -(152 + 826)];v148=v84[v147];v146=(2 -1) + 0;end end end elseif (((1057 + 1550)>(710 -439)) and (v87<=(104 -82))) then do return;end elseif ((v87>(431 -(69 + 339))) or ((2062 + 1385)>=(5766 -(1468 + 367)))) then v84[v86[279 -(73 + 204)]][v86[(8 -6) + 1]]=v84[v86[7 -3]];else local v197=829 -(635 + 194);local v198;local v199;while true do if (((71 + 1014)>=(234 + 715)) and (v197==(1118 -(853 + 264)))) then while true do if ((704<=(1835 -(153 + 177))) and (v198==(1482 -((2806 -(1261 + 81)) + 17 + 1)))) then v199=v86[3 -1];v84[v199]=v84[v199]();break;end end break;end if (((60 + 2475)>(2614 -1120)) and (v197==(0 -0))) then v198=0 + (0 -0);v199=nil;v197=(3 -2) + 0;end end end elseif (((6386 -1530)>(29 + 33 + 53)) and (v87<=(3 + 23))) then if ((v87==(5 + 20)) or ((3406 -(778 + 1035))<(1736 -(941 -(402 + 63))))) then if (((326 + 1021)<=(788 + 3823)) and (v86[5 -3]==v84[v86[12 -8]])) then v67=v67 + (59 -(56 + 2));else v67=v86[631 -(57 + (792 -(147 + 74)))];end elseif ((v84[v86[3 -1]]~=v84[v86[17 -13]]) or (((2326 -(202 + 108)) + 727)==(6480 -5137))) then v67=v67 + 1 + 0;else v67=v86[341 -(4 + 334)];end elseif (((4541 -(7090 -4165))==(3107 -(1474 + 17))) and (v87<=(97 -70))) then local v149=0 + 0;local v150;local v151;local v152;local v153;while true do if ((v149==(8 -6)) or ((2625 -(218 + 1781))==(674 + 166 + 1126))) then while true do if ((v150==((0 -0) + 0)) or ((2367 -(528 + 549 + 171))==(3441 + (328 -124)))) then local v256=0 -0;local v257;while true do if ((v256==(0 -0)) or (3712<(6088 -4360))) then v257=1606 -(1254 + 352);while true do if ((v257==((489 -(216 + 272)) -0)) or ((3393 -(311 + 257))>((8779 -(178 + 119)) -4501))) then v150=1 -0;break;end if (((6993 -5005)<=(5093 -(622 + 1290))) and (v257==(0 -0))) then v151=v86[2 + 0];v152={v84[v151](v12(v84,v151 + (685 -(32 + 652)),v68))};v257=2 -1;end end break;end end end if ((v150==(690 -(570 + 119))) or ((1244 + 103)>=(1924 -((1147 -(1039 + 23)) + 317)))) then v153=0 + 0;for v282=v151,v86[4 + 0] do local v283=1640 -(845 + 379 + 416);while true do if (((14985 -10313)<=(3499 + (2240 -974))) and (v283==(0 -0))) then v153=v153 + 1 + 0;v84[v282]=v152[v153];break;end end end break;end end break;end if ((v149==(1 + 0)) or ((5309 -(177 + 391))<=(413 + 106 + 10))) then v152=nil;v153=nil;v149=2;end if ((v149==(0 + 0)) or ((3892 -(354 + 395))<(3335 -(162 + 1068)))) then v150=1675 -(1282 + 393);v151=nil;v149=2 -1;end end elseif (((3578 -(368 + 187))==(3823 -(539 + 261))) and (v87==(14 + (435 -(93 + 328))))) then v84[v86[(1 -0) + 1]]={};else local v203=0 + 0;local v204;local v205;local v206;local v207;while true do if (((13516 -9766)>(101 + 191)) and (v203==(5 -3))) then for v258=v204,v68 do local v259=0 -0;local v260;while true do if ((v259==(943 -(758 + 185))) or ((6271 -1309)<=(3620 -((2263 -1198) + (1751 -1277))))) then v260=0 + 0;while true do if ((v260==(1960 -(618 + 1342))) or ((4277 -(1002 + 193))<(1204 -(831 + 367)))) then v207=v207 + (3 -2);v84[v258]=v205[v207];break;end end break;end end end break;end if ((4553>(27 + 332)) and ((1 + 0)==v203)) then local v243=0 -0;while true do if (((9725 -5692)==((3504 -2263) + (4316 -1524))) and (1==v243)) then v203=428 -(65 + (1465 -1104));break;end if (((4416 -(1280 + 444))==(628 + 771 + 1293)) and (v243==(1747 -(46 + 1701)))) then v68=(v206 + v204) -(2 -(507 -(80 + 426)));v207=1400 -(64 + 1336);v243=(403 -(201 + 201)) -0;end end end if (((1300 -(50 + 1025))<(10701 -7537)) and (v203==(0 + 0))) then local v244=1989 -(845 + 1144);while true do if ((v244==(1 + 0)) or ((13142 -10052)<=(2689 -2003))) then v203=2 -1;break;end if ((v244==(1171 -(183 + 988))) or (1517>(306 + 301 + 946))) then v204=v86[2 -0];v205,v206=v81(v84[v204](v12(v84,v204 + (966 -(181 + 784)),v86[1312 -(193 + 1116)])));v244=2 -1;end end end end end elseif ((v87<=(16 + 18)) or (4024<=(2457 -(670 + 1080)))) then if ((v87<=(60 -(21 + 8))) or ((11496 -7407)<((4930 -(829 + 283)) -2795))) then if (((1745 -796)<=(1613 + 1996)) and (v87>(94 -64))) then local v154=27 -(12 + 15);local v155;local v156;local v157;local v158;local v159;while true do if ((v154==(1205 -(429 + 775))) or ((16010 -11908)>(4758 + 178))) then v157=nil;v158=nil;v154=4 -2;end if (((12217 -7977)>=(3886 -1254)) and (v154==(2 -(0 -0)))) then v159=nil;while true do if (((434 + 2686)>(1272 -(89 + 629))) and (v155==((1575 -(1564 + 10)) + (726 -(383 + 342))))) then for v284=v156,v68 do local v285=1591 -(96 + 1495);local v286;while true do if ((v285==0) or (((2113 -(139 + 3)) -(189 + 1034))==(292 + (2891 -800)))) then v286=0 -0;while true do if (((521 -223)<(6992 -3715)) and ((1181 -(227 + 954))==v286)) then v159=v159 + (662 -(654 + (29 -22)));v84[v284]=v157[v159];break;end end break;end end end break;end if ((v155==(720 -(456 + (625 -361)))) or ((1321 + 547)>=((688 + 3782) -(189 + 134 + 1455)))) then local v261=1427 -(267 + 1160);local v262;while true do if (((1598 -(792 + 109 + 149))<=(14473 -9830)) and (v261==(0 + 0 + 0 + 0))) then v262=(1260 -(729 + 531)) + 0;while true do if ((v262==(1122 -(552 + (2468 -(1730 + 169))))) or (2574<=((1255 + 414) -(991 + 88 + 114)))) then v155=2 -1;break;end if ((v262==0) or ((2364 + 2321)<(1605 + 113))) then local v346=0 -0;while true do if (((1 + 0 + 0)==v346) or ((57 + 253)<=(896 -615))) then v262=3 -2;break;end if ((v346==((275 -99) -(167 + 9))) or ((6570 -(1713 + (1400 -(110 + 1186))))==((26 + 1929) -565))) then v156=v86[6 -4];v157,v158=v81(v84[v156]());v346=3 -(1 + 1);end end end end break;end end end if (((1 -0)==v155) or ((1456 -(1026 + 328))>(1289 + 142))) then local v263=0 + 0;while true do if ((v263==(1 -0)) or ((4225 -(997 + (2017 -(4 + 1083))))<=(3297 -1671))) then v155=886 -(96 + 788);break;end if (((3862 -(292 + 1415))>(1605 -(162 + (1516 -(354 + 561))))) and (v263==(0 + 0))) then local v320=0 + 0;while true do if ((v320==(1591 -(734 + (2167 -(1132 + 178))))) or ((8124 -6482)>=(5617 -(888 + 37)))) then v68=(v158 + v156) -(231 -(209 + 21));v159=0 + 0;v320=1 + 0;end if (((10312 -5827)>((6257 -3185) -(258 + 833))) and (v320==(2 -1))) then v263=3 -2;break;end end end end end end break;end if ((v154==(0 -0)) or ((1181 + 3259)<(5939 -4432))) then v155=63 -(30 + 33);v156=nil;v154=(581 -(356 + 224)) + (1298 -(1293 + 5));end end else local v160=0 -0;local v161;local v162;local v163;local v164;local v165;while true do if (((237 + 196 + (1336 -(720 + 47)))<=((259 + 2259) -(66 + 612))) and ((3 -1)==v160)) then v165=nil;while true do if (((851 + 1028)<=(1596 + 843)) and (v161==1)) then local v264=0 -0;local v265;while true do if ((v264==(1934 -(1433 + 501))) or ((6340 -3599)<(340 + 672))) then v265=281 -(48 + 233);while true do if (((2309 -(689 + 707))==(2447 -(708 + 826))) and (v265==(1673 -(1285 + 388)))) then local v347=0 + 0;while true do if ((v347==(0 + 0)) or (((4449 -(343 + 128)) -2306)<(37 + 358))) then v68=(v164 + v162) -(2 -1);v165=0 + 0;v347=1 -(0 -0);end if ((v347==(1 + 0)) or ((1050 + 523)>(3693 -(2813 -(601 + 443))))) then v265=1 + 0;break;end end end if ((v265==(4 -3)) or ((1131 + 574)==2208)) then v161=3 -1;break;end end break;end end end if ((v161==(1419 -(659 + 610 + 148))) or ((3175 + 1274)<(2120 -(655 + 1118)))) then for v287=v162,v68 do local v288=1965 -(1399 + 566);local v289;while true do if ((999>=(1238 -767)) and (v288==(0 + 0))) then v289=687 -(206 + 481);while true do if ((v289==(975 -(355 + 620))) or ((1642 -(120 + 404))>(1562 -(87 + 11)))) then v165=v165 + 1 + 0;v84[v287]=v163[v165];break;end end break;end end end break;end if ((v161==(0 -0)) or ((4275 -(101 + 261))<=(3555 -2242))) then local v266=1594 -(1472 + (544 -422));local v267;while true do if (((4490 -(892 + 414))<=(5559 -(1912 + 48))) and (v266==(1274 -(1230 + 44)))) then v267=0 -0;while true do if (((4532 -(1516 + 339))<=(593 + 3014)) and ((0 -(1597 -(739 + 858)))==v267)) then v162=v86[2 + 0];v163,v164=v81(v84[v162](v84[v162 + 1 + 0]));v267=783 -(168 + 614);end if (((4305 -(693 + (499 -205)))>(3840 -(1106 + 576))) and (v267==(2 -1))) then v161=1627 -(1351 + 275);break;end end break;end end end end break;end if ((v160==(160 -(121 + 38))) or ((5937 -(229 + 1240))<=(5127 -(78 + 814)))) then v163=nil;v164=nil;v160=2 + 0;end if (((147 + 202)<=(1989 + 529)) and (v160==(0 -0))) then v161=(879 -(543 + 336)) -0;v162=nil;v160=1 + 0;end end end elseif (((2828 + 672)==(1041 + 2459)) and (v87<=(24 + 8))) then local v166=0 -0;local v167;local v168;while true do if ((v166==(1292 -(671 + 227 + 394))) or ((3236 -2395)<((1455 -898) -439))) then v167=1858 -(33 + 1825);v168=nil;v166=3 -(8 -6);end if ((v166==(142 -(112 + (142 -113)))) or ((3579 + 430)<(4846 -(1582 + 135)))) then while true do if ((v167==(0 + 0)) or ((7107 -(2391 -(34 + 47)))<(9288 -5738))) then v168=v84[v86[6 -(1 + 1)]];if (((12507 -8011)>=3292) and  not v168) then v67=v67 + (1 -0);else local v305=186 -(34 + 152);local v306;while true do if (((1433 -(1054 + 379))==v305) or ((2076 + 187)==(5092 -(434 + 47)))) then v306=692 -(120 + 572);while true do if (((1091 -(571 + 520))==v306) or (((1763 -(144 + 1555)) + 2290)==(3637 -(231 + 458)))) then v84[v86[1785 -(1318 + 465)]]=v168;v67=v86[1 + 2];break;end end break;end end end break;end end break;end end elseif (((1041 + 583)>=(2229 -1045)) and (v87>(28 + (295 -(60 + 230))))) then local v208=1080 -(600 + 170 + 310);local v209;local v210;local v211;local v212;local v213;local v214;local v215;while true do if (((4231 -(283 + 836))>=(460 + 2260)) and ((0 + 0)==v208)) then v209=833 -(146 + 687);v210=nil;v208=2 -1;end if ((((18917 -9082) -6292)==(6991 -3448)) and ((1407 -(989 + 416))==v208)) then v213=nil;v214=nil;v208=(281 -(150 + 128)) + 0;end if ((v208==(2 + 1)) or ((1261 + 1492)<=((2543 -1073) + 1277))) then v215=nil;while true do if ((v209==(2 -1)) or ((7342 -4774)<=(2834 -(851 + 157 + 24)))) then local v307=0 + (1469 -(377 + 1092));while true do if (((11679 -7043)==(12252 -7616)) and (v307==(1 -(0 -0)))) then v209=(2356 -1746) -(607 + 1);break;end if (((6160 -4023)>(2007 -(927 + 1004))) and (v307==(0 + 0))) then v212=nil;v213=nil;v307=1 + 0;end end end if (((756 + 438)==(1978 -784)) and ((0 + 0)==v209)) then v210=0 -0;v211=nil;v209=2 -1;end if (((2528 -1666)<(11144 -8286)) and (v209==((1 + 5) -4))) then local v308=167 -(61 + 31 + 75);while true do if (((1679 + (5685 -2701))>(5258 -(1281 + 494))) and (v308==(1258 -(833 + 424)))) then v209=(386 -(165 + 210)) -8;break;end if ((v308==(0 + (0 -0))) or ((3599 + 605)<=(4110 -(497 + 324)))) then v214=nil;v215=nil;v308=1 -0;end end end if (((5030 -1208)>=(998 + 2137)) and (v209==(783 -(728 + 52)))) then while true do if (((174 + 44)<((5826 -(88 + 413)) -(481 + 406 + 164))) and (v210==(1 + 0))) then local v329=(43 -26) -(4 + 13);while true do if ((((1999 -(590 + 844)) -(146 + 418))==v329) or ((4534 -(109 + 871))<(2443 -(104 + 76)))) then v210=1 + 0 + 1;break;end if (((2160 -1603)<=(6786 -2880)) and ((0 + 0)==v329)) then local v373=449 -(31 + 418);while true do if (((1281 + 119 + 195)<=((4238 -3165) + 2334)) and ((0 + 0)==v373)) then v213=v211 + (5 -(3 -0));v214={v84[v211](v84[v211 + (1 -0)],v84[v213])};v373=419 -(227 + 17 + 174);end if ((v373==(1096 -(592 + 503))) or (((6291 -(1366 + 224)) -(177 + 221))>(3547 + 1421))) then v329=384 -(203 + 180);break;end end end end end if (((1521 -(13 + 7))<=(1712 + 2395)) and (v210==(2 + 0))) then local v330=0 -(0 + 0);local v331;while true do if ((v330==0) or ((1 + 23)>4392)) then v331=308 -(18 + 290);while true do if ((v331==(0 -0)) or ((102 + 206 + 20)>(7465 -5065))) then local v379=0 -0;while true do if (((6295 -3084)<(5018 -(318 + 1336))) and (v379==(50 -(28 + 22)))) then for v392=1178 -((715 -256) + 718),v212 do v84[v213 + v392]=v214[v392];end v215=v214[(1766 -(1214 + 551)) + 0];v379=1 + 0;end if ((v379==(3 -2)) or ((17 + 672)==4314)) then v331=1;break;end end end if (((440 -319)<=(3086 + 133)) and (v331==(1 + 0))) then v210=3;break;end end break;end end end if (((1837 + 1827)>(3896 -(1131 + 167))) and (v210==(7 -4))) then if (v215 or ((597 -((165 -79) + 69))>=(4878 -(969 + 294)))) then local v365=0 + 0;local v366;local v367;while true do if (((22952 -18152)==4800) and (v365==(1785 -(1010 + 774)))) then while true do if (((374 + 362)<(2973 + 421)) and (v366==(486 -(359 + 127)))) then v367=1270 -(783 + 487);while true do if (((4838 -(108 + 334))>(859 -566)) and (v367==(897 -(254 + 643)))) then v84[v213]=v215;v67=v86[(2 -1) + 2];break;end end break;end end break;end if ((v365==(0 -0)) or ((615 + 1121)==(3394 -(275 + 64)))) then v366=0 + 0;v367=nil;v365=1 + 0;end end else v67=v67 + (138 -(120 + 17));end break;end if (((0 + 0)==v210) or ((147 + 2080)>(9532 -5187))) then local v332=79 -(13 + 66);local v333;while true do if (((10377 -7477)==(3054 -(50 + 104))) and (v332==0)) then v333=0 -0;while true do if (((138 -((1678 -(264 + 1291)) + 15))==v333) or ((6827 -3489)<(1241 + 161))) then v211=v86[7 -5];v212=v86[3 + 1];v333=2 -1;end if ((v333==(1 + 0)) or ((6010 -(1818 + 26))<(4850 -(618 + 686)))) then v210=1 + 0;break;end end break;end end end end break;end end break;end if ((v208==(3 -2)) or ((3346 -1732)>=(2015 + 2554))) then v211=nil;v212=nil;v208=3 -1;end end else for v237=v86[2 + 0],v86[191 -(115 + 73)] do v84[v237]=nil;end end elseif (((4320 -(193 + 226))>=((2382 + 384) -(585 + 983))) and (v87<=(959 -(246 + 676)))) then if (((7329 -4302)>=(3722 -(776 + 1140))) and (v87<=(165 -130))) then local v169=0 + 0;local v170;local v171;local v172;local v173;while true do if (((24 + 2558)<=(3939 + 468)) and (v169==(865 -(731 + 133)))) then v172=nil;v173=nil;v169=2 -0;end if ((v169==(2 -0)) or ((4945 -(886 + 1040))<=(977 + 1675))) then while true do if (((206 + 123)<(2127 -(1314 + (267 -182)))) and (v170==(0 -(1193 -(436 + 757))))) then local v269=0 -0;while true do if ((v269==(0 + 0)) or (4161<=554)) then v171=v79[v86[3 -0]];v172=nil;v269=1 + 0 + 0;end if ((v269==(3 -2)) or (((8528 -5150) -(89 + 1297))==(853 + 198))) then v170=2 -1;break;end end end if ((v170==1) or ((23284 -(1894 + 16658))<(4272 -(850 + 677)))) then v173={};v172=v9({},{__index=function(v290,v291)local v309=(143 -113) -(20 + 10);local v310;while true do if (((0 + 0 + 0)==v309) or ((933 -(351 + (1758 -(207 + 1388))))==(4372 -(1069 + 201)))) then v310=v173[v291];return v310[1886 -(146 + 1739)][v310[7 -5]];end end end,__newindex=function(v292,v293,v294)local v311=1803 -(1450 + 353);local v312;local v313;while true do if (((0 + 0)==v311) or ((6180 -(1305 + (983 -(29 + 314))))<=(2666 -(626 + 768)))) then v312=0 + 0 + 0;v313=nil;v311=1;end if ((v311==1) or ((12304 -8421)>=(668 + 4081))) then while true do if ((((3905 -(157 + 1317)) -(45 + 25 + 179))<=(7375 -4290)) and (v312==(0 + 0))) then v313=v173[v293];v313[1 -0][v313[1 + (1 -0)]]=v294;break;end end break;end end end});v170=327 -(271 + 54);end if ((v170==(2 + 0)) or ((5770 -2661)>(1085 + 3474))) then for v295=1 + 0,v86[1 + 3] do local v296=(2803 -(512 + 956)) -(530 + 805);local v297;local v298;while true do if (((3166 -(730 + 763))==(2289 -616)) and (v296==(274 -(259 + (1853 -(1188 + 650)))))) then v297=0 + 0;v298=nil;v296=(3 + 1) -3;end if (((8392 -5105)==(4227 -(198 + 742))) and (v296==(1 + 0))) then while true do if ((v297==(0 + 0 + 0)) or ((2399 -(174 + 1065))>=(3453 -(180 + 1666)))) then v67=v67 + (394 -(161 + 232));v298=v78[v67];v297=564 -(436 + 75 + 52);end if ((v297==(1 + 0)) or (((1444 + 1261) -(3162 -(177 + 1299)))==(3043 + 848))) then if (((9619 -4876)>=(3886 -(862 + 1995))) and (v298[1749 -(1507 + 241)]==((189 + 273) -(336 + 86)))) then v173[v295-(3 -(171 -(130 + 39)))]={v84,v298[13 -10]};else v173[v295-(1 + 0)]={v35,v298[2 + 1]};end v83[ #v83 + ((2507 -(620 + 512)) -(576 + (2776 -1978)))]=v173;break;end end break;end end end v84[v86[(94 -(28 + 60)) -4]]=v28(v171,v172,v36);break;end end break;end if (((1084 + 2759)>=(980 -(279 + 177 + 104))) and ((0 + 0)==v169)) then v170=0 -0;v171=nil;v169=2 -1;end end elseif (((4274 + 328)>(4282 -(199 + 498))) and (v87>(1643 -(1556 + 51)))) then if ((v84[v86[1489 -(171 + 1316)]]==v84[v86[642 -(273 + 365)]]) or ((331 + 1412)>(3670 -((1816 -(607 + 129)) + 704)))) then v67=v67 + (1337 -(1328 + 8));else v67=v86[13 -10];end else v84[v86[3 -1]][v86[2 + 1]]=v86[4];end elseif (((10526 -7625)>=(2952 -1729)) and (v87<=(257 -(118 + 101)))) then if ((v84[v86[4 -2]]~=v86[347 -(105 + (376 -138))]) or (((42217 -30116) -7574)<=((38705 -20539) -14423))) then v67=v67 + (1 -0);else v67=v86[672 -(385 + 284)];end elseif ((v87>(63 -24)) or ((29 + 25)>=((4323 -1973) + 133))) then v84[v86[338 -(255 + 81)]]=v84[v86[2 + 1]];else local v221=0 -0;local v222;local v223;while true do if (((837 -(10 + 65 + 150))>=(188 + 345)) and (v221==(1 + 0))) then while true do if (((0 -0)==v222) or ((3968 -1804)>(1242 + 2965))) then v223=v86[(972 -(465 + 506)) + 1];v84[v223](v12(v84,v223 + 1,v86[1 + 2]));break;end end break;end if (((3778 -(338 + 1165))==((8574 -(919 + 136)) -5244)) and (v221==(0 -0))) then v222=0 + 0;v223=nil;v221=1;end end end v67=v67 + (276 -((307 -(125 + 87)) + 180));break;end if ((v91==(0 + 0)) or ((6569 -(658 + 1155))<384)) then local v104=0 + 0;while true do if ((v104==(1904 -(191 + 1712))) or ((810 -374)>=(3706 + 126))) then v91=1965 -(1194 + 770);break;end if ((((11915 -7291) -(134 + 203 + 109))==(12625 -(23080 -14633))) and (v104==(0 -0))) then v86=v78[v67];v87=v86[3 -2];v104=(1719 -(710 + 1008)) + 0;end end end end break;end end end end A,B=v26(v10(v71));if  not A[1] then local v88=v34[4][v67] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)(...);end vv8(),...);end
